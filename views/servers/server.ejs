<!DOCTYPE html>
<html lang="pl" itemscope itemtype="http://schema.org/WebPage">

<% 
  // Enhanced indexing criteria with scoring system
  const indexScore = {
    members: serverdata.memberCount >= 50 ? 1 : 0,
    shortDesc: serverdata.shortDesc?.length >= 100 ? 1 : 0,
    longDesc: serverdata.longDesc?.length >= 300 ? 1 : 0,
    tags: serverdata.tags?.length >= 2 ? 1 : 0,
    active: serverdata.events?.length > 0 ? 1 : 0,
    hasAdmins: serverdata.administration?.length > 0 ? 1 : 0
  };
  
  const totalScore = Object.values(indexScore).reduce((a, b) => a + b, 0);
  const shouldIndex = totalScore >= 4; // Require at least 4/6 quality factors
  
  // Initialize current tab
  const urlParams = new URLSearchParams(req.query);
  const currentTab = urlParams.get('tab') || 'info';
  
  // Prepare meta data with fallbacks
  const serverName = sbot.guilds.cache.get(serverdata.serverID)?.name || "Nieznany serwer Discord";
  const defaultDesc = `Dołącz do ${serverName} - polska społeczność na Discordzie. ${serverdata.tags?.length ? 'Tematyka: ' + serverdata.tags.join(', ') : ''}`;
  
  // Enhanced description generation
  const serverDesc = serverdata.shortDesc 
    ? `${serverdata.shortDesc.substring(0, 120)}${serverdata.shortDesc.length > 120 ? '...' : ''}`
    : defaultDesc;
  
  const serverIcon = sbot.guilds.cache.get(serverdata.serverID)?.iconURL({ format: 'png', size: 256 }) 
    || 'https://cdn.discordapp.com/embed/avatars/0.png';
  
  // Dynamic titles and descriptions with emoji fallbacks
  const tabTitles = {
    info: `${serverName} | Polski Serwer Discord ${serverdata.tags?.length ? '・ ' + serverdata.tags.slice(0, 2).join(' ・ ') : ''}`,
    admins: `👥 Zespół Administracyjny | ${serverName}`,
    events: `📅 Nadchodzące Wydarzenia | ${serverName}`
  };
  
  const tabDescriptions = {
    info: serverDesc,
    admins: `Poznaj administratorów serwera ${serverName}. ${serverdata.administration?.length ? `Zespół liczy ${serverdata.administration.length} osób.` : ''}`,
    events: serverdata.events?.length 
      ? `Nadchodzące wydarzenia na serwerze ${serverName}: ${serverdata.events.slice(0, 2).map(e => e.name).join(', ')}`
      : `Kalendarz wydarzeń serwera ${serverName}`
  };
  
  // Image selection logic
  const metaImage = currentTab === 'events' && serverdata.events?.[0]?.imageURL 
    ? serverdata.events[0].imageURL 
    : sbot.guilds.cache.get(serverdata.serverID)?.bannerURL({ format: 'png', size: 1024 }) 
      || serverIcon;
%>

<head>
  <%- include('../partials/head') %>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="<%= tabDescriptions[currentTab] %>">
  <meta name="keywords" content="<%= [
    'Discord',
    'Polski Discord',
    serverName,
    ...(serverdata.tags || []),
    'serwery Discord',
    'społeczność',
    'gry',
    'czat'
  ].join(', ') %>">
  <meta name="robots" content="index, follow, max-image-preview:large">
  <meta name="googlebot" content="index, follow, max-snippet:-1, max-image-preview:large">

  <!-- Title and Canonical -->
  <title><%= tabTitles[currentTab] %></title>
  <link rel="canonical" href="https://discordzik.pl/server/<%=serverdata.serverID%><%= currentTab !== 'info' ? `?tab=${currentTab}` : '' %>">

  <!-- Favicon -->
  <link rel="shortcut icon" href="<%= serverIcon %>" type="image/png">

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://discordzik.pl/server/<%=serverdata.serverID%><%= currentTab !== 'info' ? `?tab=${currentTab}` : '' %>">
  <meta property="og:title" content="<%= tabTitles[currentTab] %>">
  <meta property="og:description" content="<%= tabDescriptions[currentTab] %>">
  <meta property="og:image" content="<%= metaImage %>">
  <meta property="og:image:width" content="1200">
  <meta property="og:image:height" content="630">
  <meta property="og:image:alt" content="Logo serwera <%= serverName %>">

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="<%= tabTitles[currentTab] %>">
  <meta name="twitter:description" content="<%= tabDescriptions[currentTab] %>">
  <meta name="twitter:image" content="<%= metaImage %>">

  <!-- Additional Meta -->
  <meta name="theme-color" content="#5865f2">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-title" content="Discordzik.pl">

  <!-- Preload Critical Resources -->
  <link rel="preload" href="/assets/css/motyw.css" as="style">
  <link rel="preload" href="/assets/css/styles.css" as="style">
  <link rel="preload" href="<%= serverIcon %>" as="image">

  <!-- CSS -->
  <link rel="stylesheet" href="/assets/css/motyw.css">
  <link rel="stylesheet" href="/assets/css/styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

  <!-- Structured Data -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Organization",
    "name": "<%= serverName %>",
    "url": "https://discordzik.pl/server/<%=serverdata.serverID%>",
    "logo": "<%= serverIcon %>",
    "description": "<%= serverDesc %>",
    "sameAs": [
      "<%= serverdata.stronaURL || '' %>",
      "<%= serverdata.patroniteURL || '' %>"
    ],
    "memberCount": "<%= sbot.guilds.cache.get(serverdata.serverID)?.memberCount || 'Unknown' %>"
  }
  </script>

  <% if (serverdata.events && serverdata.events.length > 0) { %>
  <script type="application/ld+json">
  [
    <% serverdata.events.slice(0, 3).forEach((event, index) => { %>
    {
      "@context": "https://schema.org",
      "@type": "Event",
      "name": "<%= event.name %>",
      "startDate": "<%= event.startDate %>",
      "endDate": "<%= event.endDate %>",
      "eventStatus": "https://schema.org/EventScheduled",
      "eventAttendanceMode": "https://schema.org/OnlineEventAttendanceMode",
      "location": {
        "@type": "VirtualLocation",
        "url": "https://discordzik.pl/server/<%=serverdata.serverID%>"
      },
      "image": "<%= event.imageURL || serverIcon %>",
      "description": "<%= event.description || serverDesc %>",
      "organizer": {
        "@type": "Organization",
        "name": "<%= serverName %>",
        "url": "https://discordzik.pl/server/<%=serverdata.serverID%>"
      }
    }<%= index < serverdata.events.length - 1 ? ',' : '' %>
    <% }); %>
  ]
  </script>
  <% } %>
</head>
<!-- Dynamiczne style tematyczne -->
    <style>
        /* Keyframes for the pulsing animation */
        @keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
                color: white;
            }
            50% {
                transform: scale(1.2);
                opacity: 0.8;
                color: #FFD700; /* Change color to gold */
            }
            100% {
                transform: scale(1);
                opacity: 1;
                color: white;
            }
        }

        /* Apply the animation to the icon */
        .animate-icon {
            animation: pulse 1.5s infinite;
        }

        /* Button styling */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 10px 20px;
            font-size: 16px;
            border: 2px solid;
            border-radius: 5px;
            text-decoration: none;
            font-weight: bold;
            transition: background-color 0.3s, border-color 0.3s, color 0.3s;
        }

        .btn-lg {
            font-size: 18px;
            padding: 12px 24px;
        }

        .btn-primary {
            background-color: #D4A017;
            border-color: #B8860B;
            color: white;
        }

        .btn-primary:hover {
            background-color: #B8860B;
            border-color: #D4A017;
            color: white;
        }

    .emoji-container {
      max-height: 100px; /* Ogranicza wysokość kontenera do 100px */
      overflow: hidden; /* Ukrywa emoji poza wysokością kontenera */
      transition: max-height 0.3s ease; /* Płynne rozszerzanie kontenera */
    }

    .emoji-container.expanded {
      max-height: 500px; /* Wysokość kontenera po rozwinięciu */
    }

    #showMoreBtn {
      display: block;
      margin-top: 10px;
    }

  /* Ulepszone animacje glow */
  .glow-blue {
    animation: blue-glow 3s infinite ease-in-out;
    border: 1px solid rgba(0, 123, 255, 0.3);
  }
  
  .glow-orange {
    animation: orange-glow 3s infinite ease-in-out;
    border: 1px solid rgba(255, 193, 7, 0.3);
  }
  
  .glow-gold {
    animation: gold-glow 3s infinite ease-in-out;
    border: 1px solid rgba(255, 215, 0, 0.3);
  }
  
  @keyframes blue-glow {
    0%, 100% { box-shadow: 0 0 8px rgba(0, 123, 255, 0.5); }
    50% { box-shadow: 0 0 20px rgba(0, 123, 255, 0.8); }
  }
  
  @keyframes orange-glow {
    0%, 100% { box-shadow: 0 0 8px rgba(255, 193, 7, 0.5); }
    50% { box-shadow: 0 0 20px rgba(255, 193, 7, 0.8); }
  }
  
  @keyframes gold-glow {
    0%, 100% { box-shadow: 0 0 8px rgba(255, 215, 0, 0.5); }
    50% { box-shadow: 0 0 20px rgba(255, 215, 0, 0.8); }
  }
  
  .border-gold {
    border-color: #ffd700 !important;
  }
  
  .text-gold {
    color: #ffd700 !important;
  }

		
.rank-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  min-width: 24px;
  min-height: 24px;
  max-width: 24px;
  max-height: 24px;
  aspect-ratio: 1 / 1; /* Gwarantuje zachowanie proporcji */
  border-radius: 50%;
  color: #fff;
  font-size: 12px;
  margin-right: 6px;
  overflow: hidden;
  box-sizing: border-box; /* Upewnia się, że padding nie zwiększa rozmiaru elementu */
}

.rank-badge i {
  font-size: 12px;
  position: relative;
  top: 1px;
}

/* Rank-Specific Styles */
.rank-badge.badge-basic {
  background-color: #007bff;
}

.rank-badge.badge-pro {
  background-color: #ff8800;
}

.rank-badge.badge-gold {
  background-color: #ffd700;
}

/* Optional Glow Effect (Can be Removed if Unwanted) */
.rank-badge.badge-basic {
  box-shadow: 0 0 4px rgba(0, 123, 255, 0.5);
}

.rank-badge.badge-pro {
  box-shadow: 0 0 4px rgba(255, 136, 0, 0.5);
}

.rank-badge.badge-gold {
  box-shadow: 0 0 4px rgba(255, 215, 0, 0.5);
}

/* Animacja pulsującej kropki */
@keyframes pulse {
    0% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
    50% {
        transform: translate(-50%, -50%) scale(1.3);
        opacity: 0.7;
    }
    100% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
}

.pulse-dot {
    animation: pulse 1.5s infinite;
}

  /* Nowe style dla tooltipa */
  .date-hover {
    position: relative;
    cursor: pointer;
    display: inline-block;
  }
  
  .date-hover .date-tooltip {
    visibility: hidden;
    width: 180px;
    background-color: #333;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 5px 8px;
    position: absolute;
    z-index: 1000;
    bottom: 80%;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    transition: opacity 0.3s;
    font-size: 13px;
    box-shadow: 0 3px 10px rgba(0,0,0,0.2);
    margin-bottom: 8px;
  }
  
  .date-hover .date-tooltip::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #333 transparent transparent transparent;
  }
  
  .date-hover:hover .date-tooltip {
    visibility: visible;
    opacity: 1;
  }

    </style>
<body>
<script>
    moment.locale('pl');
</script>
  <%- include('../partials/spinner') %>
  <main class="page-wrapper">
    <%- include('../partials/header') %>

<div class="server-theme-wrapper" data-theme="<%= serverdata.theme || 'default' %>">
    <!-- Kontenery dla efektów animacji -->
    <div class="cat-rain-effect" id="catRainContainer"></div>
    <div class="money-rain-effect" id="moneyRainContainer"></div>
    <div class="beer-rain-effect" id="beerRainContainer"></div>


      <div style="height: 30px;"></div>
      <section class="container pb-lg-5 border-bottom">
        <div class="row gy-md-5 gy-4">


<!-- Player + Timeline -->
<div class="col-lg-9 col-md-8 order-md-1">
  <div class="mb-4 mb-lg-5">
    <div class="accordion-item border-0 rounded-3 shadow-sm mb-3 
  <% if (serverdata.status === 'BASIC') { %> glow-blue 
  <% } else if (serverdata.status === 'PRO') { %> glow-orange 
  <% } else if (serverdata.status === 'GOLD') { %> glow-gold 
  <% } %>"
      style="
      position: relative; /* Umożliwia dodanie przyciemnienia */
      padding: 10px; 
      overflow: hidden; /* Zapobiega wyciekom obrazu tła */
      <% if (serverdata.customBannerURL) { %>
        background: url('<%= serverdata.customBannerURL %>') center center / cover no-repeat; 
      <% } else if (sbot.guilds.cache.get(serverdata.serverID)?.splashURL()) { %>
        background: url('<%= sbot.guilds.cache.get(serverdata.serverID).splashURL({ size: 1024 }) %>') center center / cover no-repeat; 
      <% } %>">
      
      <!-- Przyciemnienie tła -->
      <% if (serverdata.customBannerURL || sbot.guilds.cache.get(serverdata.serverID)?.splashURL()) { %>
        <div style="
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.7); /* Przyciemnienie 50% */
          z-index: 1; /* Umieszcza warstwę nad tłem, ale pod treścią */
        "></div>
      <% } %>

      <!-- Treść elementu -->
      <figcaption class="card-footer d-flex align-items-center border-0 mt-lg-0" style="padding: 3px; position: relative; z-index: 2;">
        <img src="<%= sbot.guilds.cache.get(serverdata.serverID)?.iconURL() || 'https://cdn.discordapp.com/embed/avatars/0.png' %>" 
             width="60" 
             class="rounded-circle border border-3 
             <% if (serverdata.tags.includes('BASIC')) { %> border-primary 
             <% } else if (serverdata.tags.includes('PRO')) { %> border-warning 
             <% } else if (serverdata.tags.includes('GOLD')) { %> border-gold 
             <% } else { %> border-secondary <% } %>" 
             alt="Ikona serwera <%= serverName %>"
			 loading="lazy"
             style="object-fit: cover;">
        
        <div class="ps-3">
          <h6 class="fw-semibold lh-base mb-0 d-flex align-items-center">
            <!-- Ulepszone odznaki serwera -->
    <% if (serverdata.status) { %>
      <span class="badge-rank me-2" style="
        background: <% if (serverdata.status === 'BASIC') { %>rgba(0, 123, 255, 0.2)<% } 
          else if (serverdata.status === 'PRO') { %>rgba(255, 193, 7, 0.2)<% } 
          else if (serverdata.status === 'GOLD') { %>rgba(255, 215, 0, 0.2)<% } %>;
        color: <% if (serverdata.status === 'BASIC') { %>#007bff<% } 
          else if (serverdata.status === 'PRO') { %>#ffc107<% } 
          else if (serverdata.status === 'GOLD') { %>#ffd700<% } %>;
        padding: 0.25rem 0.75rem;
        border-radius: 50rem;
        border: 1px solid <% if (serverdata.status === 'BASIC') { %>rgba(0, 123, 255, 0.3)<% } 
          else if (serverdata.status === 'PRO') { %>rgba(255, 193, 7, 0.3)<% } 
          else if (serverdata.status === 'GOLD') { %>rgba(255, 215, 0, 0.3)<% } %>;
        font-size: 0.75rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        white-space: nowrap;
        flex-shrink: 0;
      ">
        <i class="fas <% if (serverdata.status === 'BASIC') { %>fa-rocket<% } 
          else if (serverdata.status === 'PRO') { %>fa-star<% } 
          else if (serverdata.status === 'GOLD') { %>fa-crown<% } %> me-1"></i> 
        <%= serverdata.status %>
      </span>
			<% } %>
            
            <%= sbot.guilds.cache.get(serverdata.serverID)?.name || 'Unknown' %>
          </h6>
  <span class="fs-sm 
    <% if (serverdata.status === 'BASIC') { %> text-primary 
    <% } else if (serverdata.status === 'PRO') { %> text-warning 
    <% } else if (serverdata.status === 'GOLD') { %> text-gold 
    <% } else { %> text-muted <% } %>">
    <%= serverdata.shortDesc %>
  </span>
        </div>
      </figcaption>
	        <div class="px-3 pb-2" style="position: relative; z-index: 2;">
        <div class="card border-0 bg-light bg-opacity-10 rounded-3 p-2">
          <div class="d-flex justify-content-around text-center">
            <div class="px-2">
              <div class="text-warning fw-bold" style="font-size: 0.9rem;">
                <i class="bx bxs-star"></i> 
                <% 
                  let displayRating = '0.0';
                  if (serverdata.rates?.length > 0) {
                    // Filtruj tylko oceny w zakresie 1-5 gwiazdek
                    const validRates = serverdata.rates.filter(rate => 
                      Number(rate.star_rate) >= 1 && Number(rate.star_rate) <= 5
                    );
                    
                    if (validRates.length > 0) {
                      const sum = validRates.reduce((acc, rate) => acc + Number(rate.star_rate), 0);
                      const avg = sum / validRates.length;
                      displayRating = avg.toFixed(1);
                    }
                  }
                %>
                <%= displayRating %>
              </div>
              <small class="text-muted" style="font-size: 0.7rem;">
                średnia ocena
              </small>
            </div>
            <div class="px-2">
              <div class="text-primary fw-bold" style="font-size: 0.9rem;">
                <i class="bx bx-like"></i> 
                <%= serverdata.votes === 0 ? 'Brak' : serverdata.votes.toLocaleString() %>
              </div>
              <small class="text-muted" style="font-size: 0.7rem;">
                <%= serverdata.votes === 1 ? 'głos' : 
                    (serverdata.votes > 1 && serverdata.votes < 5) ? 'głosy' : 'głosów' %>
              </small>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  

        <div class="text-center5">
          <a href="#serverDetails" class="btn btn-primary fw-semibold w-100 d-md-none mb-3" data-scroll>
            <i class="bx bxs-chevron-down align-middle me-2 "></i>
            Kliknij, aby wyświetlić informacje o serwerze
          </a>
        </div>
		
        <% if (!sbot.guilds.cache.get(serverdata.serverID)) { %>
        <div class="card card-body border-0 shadow-sm position-relative overflow-hidden ps-sm-5 mb-5">
          <div class="position-absolute top-0 start-0 w-3 h-100 bg-danger"></div>
          <h2 class="h4 fw-normal lh-base">
            <span class="fw-semibold">🤖 Ten serwer nie jest połączony z botem.</span>
          </h2>
          <p class="fs-lg mb-1">
            Ten serwer nie pojawia się w pamięci podręcznej bota. Oznacza to, że bot nie jest połączony z serwerem lub że serwer nie znajduje się w pamięci podręcznej bota. Ten serwer nie będzie widoczny na liście.
        </div>
        <% } else if (serverdata.tags.some(tag => tag === 'NSFW')) { %>
        <div class="card card-body border-0 shadow-sm position-relative overflow-hidden ps-sm-5 mb-5">
          <div class="position-absolute top-0 start-0 w-3 h-100 bg-warning"></div>
          <h2 class="h4 fw-normal lh-base">
            <span class="fw-semibold">🔞 UWAGA 🔞</span>
          </h2>
          <p class="fs-lg mb-1">Na tym serwerze znajdują się treści przeznaczone wyłącznie dla osób dorosłych (18+).</p>
          <p class="fs-lg mb-1">Wchodzisz na własną odpowiedzialność.</p>
        </div>
        <% } %>

<!-- Przyciski przełączania -->
<div class="d-flex flex-wrap justify-content-center gap-2 mb-4">
    <button id="infoBtn" class="btn btn-primary">
        <i class="bx bx-info-circle"></i>&nbsp;Informacje
    </button>
    <button id="adminsBtn" class="btn btn-outline-primary">
        <i class="bx bx-group"></i>&nbsp;Administracja
    </button>
<button id="eventsBtn" class="btn btn-outline-primary position-relative">
    <i class="bx bx-calendar-event"></i>&nbsp;Wydarzenia
    <% if (serverdata.events && serverdata.events.length > 0) { %>
        <span class="position-absolute top-0 start-100 translate-middle p-1 bg-success border border-light rounded-circle pulse-dot" style="font-size: 0;">
            <span class="visually-hidden">Dostępne wydarzenia</span>
        </span>
    <% } %>
</button>
</div>




<!-- Sekcja Informacje (domyślnie widoczna) -->
<div id="infoSection">
    <h2 class="h2 mb-4 pt-2 pt-md-0">
        Informacje
    </h2>

    <div class="accordion-item border-0 rounded-3 shadow-sm mb-3" style="padding:10px;">
        <p class="card-footer d-flex align-items-center border-0 mt-lg-0">
            <%- bot.md.render(serverdata.longDesc)
            .replace(/url\(['"]?(?:(?!['"]?\)).)+['"]?\)/gi, '')
            .replace(/<iframe/gi, '<iframe style="width: 100%; height:100vh;"')
            .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')
            .replace(/<style\b[^<]*(?:(?!<\/style>)<[^<]*)*<\/style>/gi, '') %>
        </p>
    </div>
</div>

<div id="adminsSection">
    <h2 class="h2 mb-4 pt-2 pt-md-0">Administracja</h2>

    <% if (serverdata.administration && serverdata.administration.length > 0) { %>
        <% 
        // Dokładna kolejność ról z priorytetami
        const roleOrder = {
            'Właściciel': 1,
            'Admin': 2, 
            'Moderator': 3,
            'Developer': 4,
            // Domyślna wartość dla nieznanych ról
            '_default': 999
        };
        
        // Funkcja do pobierania priorytetu roli
        function getRolePriority(role) {
            if (!role) return roleOrder._default;
            const foundRole = Object.keys(roleOrder).find(key => 
                role.trim().toLowerCase() === key.toLowerCase()
            );
            return foundRole ? roleOrder[foundRole] : roleOrder._default;
        }
        
        // Sortowanie administratorów z debugowaniem
        const sortedAdmins = [...serverdata.administration].sort((a, b) => {
            // Pobierz priorytety ról
            const aPriority = getRolePriority(a.role);
            const bPriority = getRolePriority(b.role);
            
            // Najpierw sortuj po priorytecie roli
            if (aPriority !== bPriority) {
                return aPriority - bPriority;
            }
            
            // Jeśli ta sama rola, sortuj po nicku (case insensitive)
            const aNick = (a.nickname || '').toString().toLowerCase();
            const bNick = (b.nickname || '').toString().toLowerCase();
            return aNick.localeCompare(bNick);
        });

        // Debug - wyświetl posortowaną listę w konsoli
        console.log('Posortowani administratorzy:', sortedAdmins.map(admin => ({
            nickname: admin.nickname,
            role: admin.role,
            priority: getRolePriority(admin.role)
        })));
        %>
        
        <div class="row gy-3">
            <% sortedAdmins.forEach(admin => { %>
                <div class="col-md-6">
                    <a href="/profile/<%= admin.userID %>" class="text-decoration-none text-reset">
                        <div class="card shadow-sm border-0 h-100 hover-effect">
                            <div class="card-body d-flex align-items-center">
                                <img src="<%= admin.avatar || 'https://cdn.discordapp.com/embed/avatars/0.png' %>" 
                                     class="rounded-circle me-3" width="48" 
                                     alt="Avatar"
                                     onerror="this.src='https://cdn.discordapp.com/embed/avatars/0.png'">
                                <div style="min-width: 0;">
                                    <p class="mb-1 fw-bold text-truncate">
                                        <%= admin.nickname || 'Nieznany użytkownik' %>
                                    </p>
                                    <p class="mb-0 text-muted d-flex align-items-center">
                                        <span class="badge" 
                                              style="margin-top: 2px; 
                                                     background-color: #<%= admin.color || '7289da' %>;
                                                     max-width: 200px;
                                                     white-space: nowrap;
                                                     overflow: hidden;
                                                     text-overflow: ellipsis;">
                                            <%= admin.role || 'Nieznana rola' %>
                                        </span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            <% }); %>
        </div>
    <% } else { %>
        <div class="alert alert-info">Brak dodanych administratorów.</div>
    <% } %>
</div>
<style>
    .hover-effect {
        transition: all 0.2s ease;
    }
    
    .hover-effect:hover {
        transform: translateY(-2px);
        box-shadow: 0 7px 14px rgba(0, 0, 0, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
        cursor: pointer;
    }
    
    .hover-effect:active {
        transform: translateY(0);
    }
</style>



<!-- Sekcja Wydarzenia (domyślnie ukryta) -->
<div id="eventsSection" style="display: none;">
    <h2 class="h2 mb-4 pt-2 pt-md-0">
        Nadchodzące wydarzenia
    </h2>

    <% if (serverdata.events && serverdata.events.length > 0) { %>
        <div class="row gy-4">
            <% serverdata.events.forEach(event => { %>
                <div class="col-md-6 col-lg-4">
                    <div class="card border-0 shadow-sm h-100 event-card">
                        <% if (event.imageURL) { %>
                            <img src="<%= event.imageURL %>" class="card-img-top" alt="Wydarzenie <%= event.name %> na serwerze <%= serverName %>" loading="lazy" style="height: 150px; object-fit: cover;" onclick="window.location.href='https://discordzik.pl/server/<%= serverdata.serverID %>/events/<%= event.id %>'">
                        <% } %>
                        <div class="card-body" onclick="window.location.href='https://discordzik.pl/server/<%= serverdata.serverID %>/events/<%= event.id %>'">
                            <h5 class="card-title"><%= event.name %></h5>
                            <p class="card-text text-muted mb-2" style="font-size: 0.75rem;">
                                <i class="bx bx-time me-1"></i>
                                <strong>Start:</strong> <%= moment(event.startDate).format('HH:mm D.MM') %> &nbsp;&nbsp;
                                <i class="bx bx-time me-1"></i>
                                <strong>Koniec:</strong> <%= moment(event.endDate).format('HH:mm D.MM') %>
                            </p>
                            <% if (event.description) { %>
                                <p class="card-text"><%= event.description %></p>
                            <% } %>
                            <div class="d-flex justify-content-between" onclick="event.stopPropagation()">
                                <button class="btn btn-outline-secondary" onclick="event.stopPropagation(); copyEventLink('<%= event.id %>')" title="Udostępnij wydarzenie">
                                    <i class="bx bx-share-alt fs-6"></i>
                                </button>
                                <% if (req.user && req.user.id === serverdata.ownerID) { %>
                                    <form class="delete-event-form" data-event-id="<%= event.id %>" onsubmit="event.preventDefault(); if(confirm('Czy na pewno chcesz usunąć to wydarzenie?')) { this.submit(); }">
                                        <button type="submit" class="btn btn-outline-danger" title="Usuń wydarzenie" onclick="event.stopPropagation()">
                                            <i class="bx bx-trash fs-6"></i>
                                        </button>
                                    </form>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    <% } else { %>
        <div class="alert alert-info">Brak nadchodzących wydarzeń.</div>
    <% } %>
</div>

<!-- Sekcja Sklep (domyślnie ukryta) -->
<div id="shopSection" style="display: none;">
    <h2 class="h2 mb-4 pt-2 pt-md-0">
        Sklep serwera
    </h2>

    <div id="shopContent">
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Ładowanie...</span>
            </div>
        </div>
    </div>
</div>

<style>
    .event-card {
        transition: all 0.3s ease;
        border: 1px solid rgba(0, 123, 255, 0.1) !important;
    }
    
    .event-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 12px rgba(0, 123, 255, 0.15) !important;
        background: linear-gradient(to bottom, rgba(0, 123, 255, 0.02), rgba(0, 86, 179, 0.03));
        border: 1px solid rgba(0, 123, 255, 0.3) !important;
    }
    
    .event-card .card-title {
        color: #007bff;
        transition: color 0.3s ease;
    }
    
    .event-card:hover .card-title {
        color: #0056b3;
    }
    
    .event-card .card-body {
        cursor: pointer;
    }
    
    .event-card .card-img-top {
        cursor: pointer;
    }
    
    .shop-item-card {
        transition: all 0.3s ease;
        border: 1px solid rgba(40, 167, 69, 0.1) !important;
    }
    
    .shop-item-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 12px rgba(40, 167, 69, 0.15) !important;
        background: linear-gradient(to bottom, rgba(40, 167, 69, 0.02), rgba(34, 139, 58, 0.03));
        border: 1px solid rgba(40, 167, 69, 0.3) !important;
    }
    
    .shop-item-card .card-title {
        color: #198754;
        transition: color 0.3s ease;
    }
    
    .shop-item-card:hover .card-title {
        color: #146c43;
    }
</style>
<script>
document.addEventListener("DOMContentLoaded", () => {
    const currentTab = '<%= currentTab %>';
    const sections = {
        infoBtn: "infoSection",
        adminsBtn: "adminsSection",
        eventsBtn: "eventsSection"
    };

    // Funkcja do zmiany zakładki
    function switchTab(tabId) {
        // Ukryj wszystkie sekcje
        Object.values(sections).forEach(sec => document.getElementById(sec).style.display = "none");

        // Resetuj style przycisków
        Object.keys(sections).forEach(id => {
            document.getElementById(id).classList.remove("btn-primary");
            document.getElementById(id).classList.add("btn-outline-primary");
        });

        // Pokaż wybraną sekcję i zaznacz przycisk
        document.getElementById(sections[tabId]).style.display = "block";
        document.getElementById(tabId).classList.remove("btn-outline-primary");
        document.getElementById(tabId).classList.add("btn-primary");

        // Ładuj sklep jeśli jest to zakładka sklepu
        if (tabId === 'shopBtn') {
            loadShop();
        }

        // Aktualizuj URL tylko dla zakładek Administracja, Wydarzenia i Sklep
        if (tabId !== 'infoBtn') {
            const url = new URL(window.location.href);
            url.searchParams.set('tab', tabId.replace('Btn', '').toLowerCase());
            window.history.pushState({}, '', url);
        } else {
            // Dla zakładki Informacje usuwamy parametr tab
            const url = new URL(window.location.href);
            url.searchParams.delete('tab');
            window.history.pushState({}, '', url);
        }
    }

    // Obsługa przycisków
    for (const btnId in sections) {
        document.getElementById(btnId).addEventListener("click", () => switchTab(btnId));
    }

    // Sprawdź parametr URL przy załadowaniu strony
    const urlParams = new URLSearchParams(window.location.search);
    const tabParam = urlParams.get('tab');
    
    // Mapowanie parametrów URL na ID przycisków
    const tabMapping = {
        'admins': 'adminsBtn',
        'events': 'eventsBtn'
    };

    const defaultTab = 'infoBtn'; // Domyślnie pokazujemy Informacje
    const initialTab = tabMapping[tabParam] || defaultTab;
    switchTab(initialTab);

    // Funkcja ładowania sklepu
    async function loadShop() {
        const shopContent = document.getElementById('shopContent');
        
        try {
            const response = await fetch(`/api/server/<%= serverdata.serverID %>/shop`);
            const data = await response.json();
            
            if (data.success) {
                if (data.items.length === 0) {
                    shopContent.innerHTML = `
                        <div class="alert alert-info text-center">
                            <i class="bx bx-shopping-bag fs-2"></i>
                            <h5 class="mt-2">Sklep jest pusty</h5>
                            <p>Na tym serwerze nie ma jeszcze żadnych przedmiotów w sklepie.</p>
                        </div>
                    `;
                } else {
                    let shopHTML = '<div class="row gy-3">';
                    
                    data.items.forEach(item => {
                        shopHTML += `
                            <div class="col-md-6 col-lg-4">
                                <div class="card border-0 shadow-sm h-100 shop-item-card">
                                    <div class="card-body">
                                        <h5 class="card-title">${item.name}</h5>
                                        <p class="card-text text-muted">${item.description || 'Bez opisu'}</p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="fw-bold text-primary fs-5">${item.price} PLN</span>
                                            <button class="btn btn-primary" onclick="purchaseItem('${item.id}')">
                                                <i class="bx bx-shopping-bag"></i> Kup
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
                    });
                    
                    shopHTML += '</div>';
                    shopContent.innerHTML = shopHTML;
                }
            }
        } catch (error) {
            console.error('Błąd ładowania sklepu:', error);
            shopContent.innerHTML = `
                <div class="alert alert-danger">
                    Wystąpił błąd podczas ładowania sklepu. Spróbuj ponownie później.
                </div>
            `;
        }
    }

    // Funkcja zakupu przedmiotu
    window.purchaseItem = async function(itemId) {
        <% if (!req.user) { %>
            alert('Musisz być zalogowany, aby dokonać zakupu.');
            window.location.href = '/login';
            return;
        <% } %>

        try {
            const response = await fetch(`/server/<%= serverdata.serverID %>/shop/purchase/${itemId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });

            const result = await response.json();
            
            if (result.success) {
                window.location.href = result.checkoutUrl;
            } else {
                alert(result.error || 'Wystąpił błąd podczas zakupu');
            }
        } catch (error) {
            console.error('Błąd zakupu:', error);
            alert('Wystąpił błąd podczas zakupu');
        }
    };
});

// Funkcja do kopiowania linku do konkretnej zakładki (tylko dla adminów i wydarzeń)
function copyTabLink(tabName) {
    const url = new URL(window.location.href);
    
    if (tabName === 'info') {
        // Dla informacji po prostu kopiujemy główny URL
        url.searchParams.delete('tab');
    } else {
        url.searchParams.set('tab', tabName);
    }
    
    // Usuń ewentualne parametry eventu jeśli są
    url.searchParams.delete('event');
    
    const link = url.toString();

    // Tworzymy ukryty element input, aby skopiować tekst
    const input = document.createElement('input');
    input.setAttribute('value', link);
    document.body.appendChild(input);

    // Zaznaczamy i kopiujemy zawartość inputu
    input.select();
    document.execCommand('copy');

    // Usuwamy input po skopiowaniu
    document.body.removeChild(input);

    // Powiadomienie o skopiowaniu
    alert(`Link do ${tabName === 'info' ? 'strony głównej' : 'zakładki "' + tabName + '"'} skopiowany!`);
}
</script>

<script>
function copyEventLink(eventId) {
    const eventLink = `https://discordzik.pl/server/<%= serverdata.serverID %>/events/${eventId}`;

    // Tworzymy ukryty element input, aby skopiować tekst
    const input = document.createElement('input');
    input.setAttribute('value', eventLink);
    document.body.appendChild(input);

    // Zaznaczamy i kopiujemy zawartość inputu
    input.select();
    document.execCommand('copy');

    // Usuwamy input po skopiowaniu
    document.body.removeChild(input);

    // Powiadomienie o skopiowaniu
    alert('Link do wydarzenia skopiowany!');
}
</script>

<script>
// Przełączanie między sekcjami
document.getElementById('infoBtn').addEventListener('click', function() {
    document.getElementById('infoSection').style.display = 'block';
    document.getElementById('eventsSection').style.display = 'none';
    this.classList.remove('btn-outline-primary');
    this.classList.add('btn-primary');
    document.getElementById('eventsBtn').classList.remove('btn-primary');
    document.getElementById('eventsBtn').classList.add('btn-outline-primary');
});

document.getElementById('eventsBtn').addEventListener('click', function() {
    document.getElementById('infoSection').style.display = 'none';
    document.getElementById('eventsSection').style.display = 'block';
    this.classList.remove('btn-outline-primary');
    this.classList.add('btn-primary');
    document.getElementById('infoBtn').classList.remove('btn-primary');
    document.getElementById('infoBtn').classList.add('btn-outline-primary');
});

// Obsługa usuwania wydarzeń
document.querySelectorAll('.delete-event-form').forEach(form => {
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const eventId = form.getAttribute('data-event-id');
        
        if (!confirm('Czy na pewno chcesz usunąć to wydarzenie?')) return;
        
        try {
            const response = await fetch(`/server/<%= serverdata.serverID %>/event/delete`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ eventId })
            });
            
            const result = await response.json();
            
            if (result.success) {
                location.reload();
            } else {
                alert('Wystąpił błąd podczas usuwania wydarzenia');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Wystąpił błąd podczas komunikacji z serwerem');
        }
    });
});
</script>


        <div class="accordion-item border-0 rounded-3 shadow-sm mb-3" style="">
        </div>
      </div>

<div class="col-lg-3 col-md-4 order-md-2 position-relative" id="serverDetails">
  <div class="sticky-top ps-lg-4" style="top: 135px !important;">
    <div class="d-flex align-items-center mb-lg-5 mb-4">
      <img src="<%= owner.avatar %>" class="rounded-circle me-3" width="60" alt="Avatar">
      <div class="position-relative"> <!-- Nowy kontener dla nazwy użytkownika -->
        <h4 class="h6 mb-1">Dodane przez</h4>
        <a href="/profile/<%= owner.id %>" class="fw-semibold">
          <%= owner.username %>
        </a>
      </div>
      
      <!-- Oddzielny kontener dla odznak -->
      <div class="d-flex align-items-center ms-2">
        <% let guild = bot.guilds.cache.get(config.server.id); %>
        <% let cache = guild ? guild.members.cache.get(serverdata.ownerID) : null; %>
        <% if (cache) { %>
  <% const badges = []; %>

  <% if (cache.permissions.bitfield & 8n) { %>
    <% badges.push({ title: "Administrator", icon: "bx-shield-alt-2", color: "warning" }); %>
  <% } %>
  <% if (cache.roles.cache.get(config.server.roles.Support)) { %>
    <% badges.push({ title: "Support", icon: "bx-support", color: "info" }); %>
  <% } %>
  <% if (cache.roles.cache.get(config.server.roles.botReviewer)) { %>
    <% badges.push({ title: "Weryfikator", icon: "bx-user-check", color: "info" }); %>
  <% } %>
  <% if (cache.roles.cache.get(config.server.roles.Partner)) { %>
    <% badges.push({ title: "Partner", icon: "bx-bolt-circle", color: "info" }); %>
  <% } %>
  <% if (cache.roles.cache.get(config.server.roles.Patron)) { %>
    <% badges.push({ title: "Patron", icon: "bx-donate-heart", color: "warning" }); %>
  <% } %>
  <% if (cache.roles.cache.get(config.server.roles.Booster)) { %>
    <% badges.push({ title: "Booster", icon: "bx-diamond", color: "info" }); %>
  <% } %>
  <% if (cache.roles.cache.get(config.server.roles.botDeveloper)) { %>
    <% badges.push({ title: "Deweloper Bota", icon: "bx-code-alt", color: "success" }); %>
  <% } %>
  <% if (cache.roles.cache.get(config.server.roles.bugHuntergold)) { %>
    <% badges.push({ title: "Gold Bug Hunter", icon: "bx-planet", color: "warning" }); %>
  <% } %>
  <% if (cache.roles.cache.get(config.server.roles.bugHunter)) { %>
    <% badges.push({ title: "Bug Hunter", icon: "bx-planet", color: "warning" }); %>
  <% } %>

  <% badges.slice(0, 3).forEach(badge => { %>
    <div class="ms-1" data-bs-toggle="tooltip" data-bs-placement="top" title="<%= badge.title %>">
      <span class="badge rounded-3 bg-<%= badge.color %> bg-opacity-10 p-1">
        <i class="bx <%= badge.icon %> text-<%= badge.color %>" style="border-radius: 50%; padding: 2px;"></i>
      </span>
    </div>
  <% }) %>
<% } %>
      </div>
    </div>
<script>
  function toggleAnalytics() {
    const analyticsSection = document.querySelector('.server-analytics');
    analyticsSection.classList.toggle('d-none');
    const toggleIcon = document.querySelector('#toggleIcon');
    toggleIcon.classList.toggle('bx-chevron-down');
    toggleIcon.classList.toggle('bx-chevron-up');
  }
</script>

<% if (req.user && req.user.id == serverdata.ownerID) { %>
<div class="card card-body shadow-sm mb-4 p-3" style="font-size: 0.9rem; border-radius: 12px;">
  <!-- Menu główne serwera -->
  <div class="server-admin-menu">
    <!-- Sekcja Informacje (rozwijana) -->
    <div class="menu-section">
      <button class="btn btn-primary w-100 text-center d-flex justify-content-between align-items-center menu-toggle rounded-pill mb-1 px-3 py-2" data-target="info-section" style="border: none; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background: linear-gradient(135deg, #0d6efd 0%, #0b5ed7 100%);">
        <span class="flex-grow-1 text-center text-white">
          <i class="bx bx-server me-2"></i><strong>Informacje serwera</strong>
        </span>
        <i class="bx bx-chevron-down toggle-icon transition-all text-white"></i>
      </button>
      <div class="menu-content mb-2 d-none" id="info-section">
        <div class="card card-body p-3 rounded-4" style="border: 1px solid rgba(0,0,0,0.08);">
          <div class="d-flex align-items-center mb-2">
            <i class="bx bx-show me-2 fs-5 text-primary"></i>
            <div>
              <div class="text-muted small">Wyświetlenia</div>
              <div class="fw-bold"><%= serverdata.analytics.views.toLocaleString() %></div>
            </div>
          </div>
          
          <div class="d-flex align-items-center mb-2">
            <i class="bx bx-palette me-2 fs-5 text-info"></i>
            <div>
              <div class="text-muted small">Motyw</div>
              <div class="fw-bold text-capitalize"><%= serverdata.theme %></div>
            </div>
          </div>
          
          <div class="d-flex align-items-center mb-3">
            <i class="bx bx-crown me-2 fs-5 text-warning"></i>
            <div>
              <div class="text-muted small">Status</div>
              <div>
                <% if (serverdata.status === 'BASIC') { %>
                  <span class="badge bg-primary px-2 py-1 rounded-pill">BASIC</span>
                <% } else if (serverdata.status === 'PRO') { %>
                  <span class="badge bg-warning px-2 py-1 rounded-pill text-dark">PRO</span>
                <% } else if (serverdata.status === 'GOLD') { %>
                  <span class="badge px-2 py-1 rounded-pill" style="background: linear-gradient(135deg, #FFD700 0%, #D4AF37 100%); color: #000;">GOLD</span>
                <% } else { %>
                  <span class="badge bg-secondary px-2 py-1 rounded-pill">Standardowy</span>
                <% } %>
              </div>
            </div>
          </div>
          
          <div class="d-flex align-items-center mb-3" id="shopRevenue">
            <i class="bx bx-shopping-bag me-2 fs-5 text-success"></i>
            <div>
              <div class="text-muted small">Przychód ze sklepu</div>
              <div class="fw-bold" id="revenueAmount">Ładowanie...</div>
            </div>
          </div>
          
          <% if (serverdata.promotedUntil) { %>
            <div class="d-flex align-items-start mb-3">
              <i class="bx bx-time me-2 fs-5 text-success mt-1"></i>
              <div>
                <div class="text-muted small">Promowany do</div>
                <div class="fw-bold" id="promotion-timer">
                  <%= new Date(serverdata.promotedUntil).toLocaleString() %>
                </div>
                <small class="text-success fw-bold d-block mt-1" id="time-remaining"></small>
              </div>
            </div>
          <% } %>
         
        </div>
      </div>
    </div>
    
    <!-- Sekcja Promocja -->
    <% if (serverdata.status === 'BASIC' || serverdata.status === 'PRO' || serverdata.status === 'GOLD') { %>
      <button class="btn btn-success w-100 text-start rounded-pill mb-1 px-3 py-2 d-flex align-items-center" style="border: none; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background: linear-gradient(135deg, #198754 0%, #146c43 100%);">
        <img src="https://discordzik.pl/assets/img/emoji/love.png" alt="Icon" style="width: 20px; height: 20px; margin-right: 10px; ">
        <span class="fw-bold text-white">Dziękujemy za wsparcie!</span>
      </button>
    <% } else { %>
      <a href="/boost" class="btn btn-warning w-100 text-start rounded-pill mb-1 px-2 py-1 d-flex align-items-center" style="border: none; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);">
        <i class="bx bx-crown me-2 fs-5 text-white"></i>
        <span class="fw-bold text-white">Promuj Serwer</span>
      </a>
    <% } %>
    
    <!-- Sekcja Zarządzanie (rozwijana) -->
    <div class="menu-section">
      <button class="btn btn-dark w-100 text-center d-flex justify-content-between align-items-center menu-toggle rounded-pill px-3 py-2 mb-1" data-target="management-section" style="border: none; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background: linear-gradient(135deg, #212529 0%, #343a40 100%);">
        <span class="flex-grow-1 text-center text-white">
          <i class="bx bx-cog me-2"></i><strong>Zarządzanie</strong>
        </span>
        <i class="bx bx-chevron-down toggle-icon transition-all text-white"></i>
      </button>
      <div class="menu-content mt-1 d-none" id="management-section">
        <a href="/server/<%= serverdata.serverID %>/event/new" class="btn btn-outline-primary w-100 text-start rounded-pill mb-2 px-3 py-2 d-flex align-items-center" style="border: 2px solid #0d6efd;">
          <i class="bx bx-plus me-2 text-primary"></i>
          <span class="text-primary">Dodaj wydarzenie</span>
        </a>
        <a href="/servers/edit/<%= serverdata.serverID %>" class="btn btn-outline-primary w-100 text-start rounded-pill mb-2 px-3 py-2 d-flex align-items-center" style="border: 2px solid #0d6efd;">
          <i class="bx bx-edit me-2 text-primary"></i>
          <span class="text-primary">Edytuj serwer</span>
        </a>
        
        <button type="button" data-bs-toggle="modal" data-bs-target="#deleteServer" class="btn btn-danger w-100 text-start rounded-pill px-3 py-2 d-flex align-items-center" style="border: none; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);">
          <i class="bx bx-trash me-2 text-white"></i>
          <span class="fw-bold text-white">Usuń serwer</span>
        </button>
      </div>
    </div>
    
    <!-- Przycisk Więcej z rozwijanym menu - PRZENIESIONY NA DÓŁ -->
    <div class="menu-section">
      <button class="btn btn-dark w-100 text-center d-flex justify-content-between align-items-center menu-toggle rounded-pill mb-1 px-3 py-2" data-target="more-section" style="border: none; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background: linear-gradient(135deg, #212529 0%, #343a40 100%);">
        <span class="flex-grow-1 text-center text-white">
          <i class="bx bx-dots-horizontal-rounded me-2"></i><strong>Więcej</strong>
        </span>
        <i class="bx bx-chevron-down toggle-icon transition-all text-white"></i>
      </button>
      <div class="menu-content mb-2 d-none" id="more-section">
        <div class="card card-body p-3 rounded-4" style="border: 1px solid rgba(0,0,0,0.08);">
          <!-- Przycisk Narzędzia -->
          <a href="/tools" class="btn btn-primary w-100 text-start rounded-pill mb-3 px-3 py-2 d-flex align-items-center" style="border: none; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background: linear-gradient(135deg, #0d6efd 0%, #0b5ed7 100%);">
            <i class="bx bx-wrench me-2 text-white"></i>
            <span class="fw-bold text-white">Narzędzia</span>
          </a>
          
          <!-- Sekcja informacyjna o wynagrodzeniach -->
          <div class="info-card bg-light p-3 rounded-4 mb-0">
            <h6 class="fw-bold mb-2 text-primary">
              <i class="bx bx-info-circle me-1"></i>Czy wiedziałeś, że...
            </h6>
            <p class="mb-2 small">Można wynagradzać za głosowanie? Ustaw automatyczne przyznawanie ról użytkownikom za głosowanie na serwer!</p>
            
            <div class="bg-dark p-2 rounded-3 mb-2" style="box-shadow: inset 0 1px 3px rgba(255,255,255,0.1);">
              <code class="text-white d-block" style="font-family: 'Fira Code', monospace; font-size: 0.8rem;">
                <span class="text-info">/setrole</span> <span class="text-warning">10</span> <span class="text-success">@Ambasador</span>
              </code>
            </div>
            
            <p class="small text-muted mb-0">
              <i class="bx bx-shield me-1"></i> Pamiętaj, by bot miał uprawnienia do zarządzania rolami.
            </p>
          </div>
        </div>
      </div>
	            <div class="text-center mt-2">
            <small class="text-muted"><i class="bx bx-lock-alt me-1"></i>Tylko Ty widzisz te informacje</small>
          </div>
    </div>
  </div>
</div>

<style>
  .server-admin-menu {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }
  
  .menu-toggle, .btn {
    transition: all 0.3s ease !important;
    will-change: transform;
  }
  
  .menu-toggle:hover, .btn:not(.btn-outline-primary):hover {
    transform: translateY(-2px) !important;
    box-shadow: 0 6px 12px rgba(0,0,0,0.15) !important;
  }
  
  .btn-outline-primary:hover {
    background-color: rgba(13, 110, 253, 0.1) !important;
  }
  
  .menu-content {
    transition: all 0.3s ease;
    overflow: hidden;
  }
  
  .transition-all {
    transition: all 0.3s ease;
  }
  
  .menu-toggle[aria-expanded="true"] .toggle-icon {
    transform: rotate(180deg);
  }
  
  .rounded-4 {
    border-radius: 1rem !important;
  }
  
  /* Poprawki dla ciemnego motywu */
  .widget-preview[data-theme="dark"] {
    background-color: #2d3136 !important;
    border-color: #40444b !important;
  }
  
  .widget-preview[data-theme="dark"] * {
    color: #f0f2f5 !important;
  }
  
  .widget-preview[data-theme="dark"] .text-muted {
    color: #b9bbbe !important;
  }
  
  .widget-preview[data-theme="dark"] .bg-light {
    background-color: rgba(255,255,255,0.05) !important;
  }
  
  .widget-preview[data-theme="dark"] .btn-primary {
    background-color: #5865F2 !important;
    border-color: #5865F2 !important;
  }
  
  /* Zachowaj oryginalne kolory gwiazdek i like'ów w ciemnym motywie */
  .widget-preview[data-theme="dark"] .text-warning,
  .widget-preview[data-theme="dark"] .stars-rating,
  .widget-preview[data-theme="dark"] .bx-star,
  .widget-preview[data-theme="dark"] .bxs-star,
  .widget-preview[data-theme="dark"] .bxs-star-half {
    color: #ffc107 !important; /* Złoty kolor gwiazdek */
  }
  
  .widget-preview[data-theme="dark"] .text-primary,
  .widget-preview[data-theme="dark"] .bx-like {
    color: #0d6efd !important; /* Niebieski kolor like'ów */
  }
  
  /* Style dla sekcji widgetów */
  .widget-preview {
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    transition: all 0.3s ease;
  }
  
  .theme-selector.active, .widget-tab-btn.active {
    background-color: #0d6efd !important;
    border-color: #0d6efd !important;
    color: white !important;
  }
  
  .theme-selector.active i, .widget-tab-btn.active i {
    color: white !important;
  }
  
  .btn-sm {
    padding: 0.35rem 0.5rem;
    font-size: 0.8rem;
  }
  
  /* Styl dla sekcji komendy */
  code {
    font-family: 'Fira Code', 'Courier New', monospace;
    font-size: 0.85rem;
  }
  
  .text-info {
    color: #17a2b8 !important;
  }
  
  .text-success {
    color: #28a745 !important;
  }
  
  .text-warning {
    color: #ffc107 !important;
  }
  
  /* Styl dla karty informacyjnej */
  .info-card {
    /* border-left: 3px solid #0dcaf0; - USUNIĘTE */
  }
</style>

<script>
  document.querySelectorAll('.menu-toggle').forEach(button => {
    button.addEventListener('click', function() {
      const target = this.getAttribute('data-target');
      const content = document.getElementById(target);
      const icon = this.querySelector('.toggle-icon');
      
      // Toggle content with animation
      if (content.classList.contains('d-none')) {
        content.classList.remove('d-none');
        content.style.maxHeight = '0';
        setTimeout(() => {
          content.style.maxHeight = content.scrollHeight + 'px';
        }, 10);
        setTimeout(() => {
          content.style.maxHeight = 'none';
        }, 300);
      } else {
        content.style.maxHeight = content.scrollHeight + 'px';
        setTimeout(() => {
          content.style.maxHeight = '0';
        }, 10);
        setTimeout(() => {
          content.classList.add('d-none');
        }, 300);
      }
      
      // Toggle icon rotation
      if (content.classList.contains('d-none')) {
        this.setAttribute('aria-expanded', 'false');
      } else {
        this.setAttribute('aria-expanded', 'true');
      }
    });
  });

  // Aktualizacja timera promocji (jeśli istnieje)
  <% if (serverdata.promotedUntil) { %>
    function updatePromotionTimer() {
      const endDate = new Date('<%= new Date(serverdata.promotedUntil).toISOString() %>');
      const now = new Date();
      const diff = endDate - now;
      
      if (diff <= 0) {
        document.getElementById('time-remaining').textContent = 'Promocja wygasła';
        return;
      }
      
      const days = Math.floor(diff / (1000 * 60 * 60 * 24));
      const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
      
      document.getElementById('time-remaining').textContent = 
        `Pozostało: ${days}d ${hours}h ${minutes}m`;
    }
    
    updatePromotionTimer();
    setInterval(updatePromotionTimer, 60000);
  <% } %>
  
  // Obsługa zmiany motywu w podglądzie widgetów
  document.querySelectorAll('.theme-selector').forEach(btn => {
    btn.addEventListener('click', function() {
      document.querySelectorAll('.theme-selector').forEach(b => b.classList.remove('active'));
      this.classList.add('active');
      
      const theme = this.getAttribute('data-theme');
      document.querySelectorAll('.widget-preview').forEach(preview => {
        preview.setAttribute('data-theme', theme);
        
        // Apply appropriate theme styles
        if (theme === 'dark') {
          preview.style.backgroundColor = '#2d3136';
          preview.style.borderColor = '#40444b';
          
          // Update all text colors inside the preview except stars and likes
          const elements = preview.querySelectorAll('*');
          elements.forEach(el => {
            if (!el.classList.contains('text-warning') && 
                !el.classList.contains('stars-rating') &&
                !el.classList.contains('bx-star') &&
                !el.classList.contains('bxs-star') &&
                !el.classList.contains('bxs-star-half') &&
                !el.classList.contains('text-primary') &&
                !el.classList.contains('bx-like') &&
                !el.classList.contains('text-success')) {
              el.style.color = '#f0f2f5';
            }
          });
          
          // Special handling for muted text
          const mutedTexts = preview.querySelectorAll('.text-muted');
          mutedTexts.forEach(el => {
            el.style.color = '#b9bbbe';
          });
          
          // Update buttons
          const buttons = preview.querySelectorAll('.btn-primary');
          buttons.forEach(btn => {
            btn.style.backgroundColor = '#5865F2';
            btn.style.borderColor = '#5865F2';
          });
        } else {
          preview.style.backgroundColor = '#f8f9fa';
          preview.style.borderColor = '#dee2e6';
          
          // Reset text colors
          const elements = preview.querySelectorAll('*');
          elements.forEach(el => {
            if (!el.classList.contains('text-warning') && 
                !el.classList.contains('text-primary') && 
                !el.classList.contains('text-success')) {
              el.style.color = '';
            }
          });
          
          // Reset muted text
          const mutedTexts = preview.querySelectorAll('.text-muted');
          mutedTexts.forEach(el => {
            el.style.color = '#6c757d';
          });
          
          // Reset buttons
          const buttons = preview.querySelectorAll('.btn-primary');
          buttons.forEach(btn => {
            btn.style.backgroundColor = '';
            btn.style.borderColor = '';
          });
        }
      });
      
      // Aktualizacja kodu
      document.querySelectorAll('pre code').forEach(code => {
        code.textContent = code.textContent.replace(/data-theme="(light|dark)"/, `data-theme="${theme}"`);
      });
    });
  });
  
  // Obsługa przełączania między widgetami
  document.querySelectorAll('.widget-tab-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      document.querySelectorAll('.widget-tab-btn').forEach(b => b.classList.remove('active'));
      this.classList.add('active');
      
      const target = this.getAttribute('data-target');
      document.querySelectorAll('.widget-content').forEach(content => {
        content.style.display = 'none';
      });
      document.getElementById(target).style.display = 'block';
    });
  });
  
  // Obsługa kopiowania kodu
  document.querySelectorAll('.copy-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const target = this.getAttribute('data-target');
      const codeElement = document.getElementById(target).querySelector('code');
      const text = codeElement.textContent;
      
      navigator.clipboard.writeText(text).then(() => {
        const originalText = this.innerHTML;
        this.innerHTML = '<i class="bx bx-check"></i>';
        setTimeout(() => {
          this.innerHTML = originalText;
        }, 2000);
      });
    });
  });

  // Załaduj przychód ze sklepu
  async function loadShopRevenue() {
    try {
      const response = await fetch('/api/server/<%= serverdata.serverID %>/shop/revenue');
      const data = await response.json();
      
      if (data.success) {
        document.getElementById('revenueAmount').textContent = `${data.revenue || 0} PLN`;
      } else {
        document.getElementById('revenueAmount').textContent = '0 PLN';
      }
    } catch (error) {
      console.error('Błąd ładowania przychodów:', error);
      document.getElementById('revenueAmount').textContent = '0 PLN';
    }
  }
  
  // Załaduj przychód przy starcie (tylko dla właściciela)
  <% if (req.user && req.user.id === serverdata.ownerID) { %>
    loadShopRevenue();
  <% } else { %>
    document.getElementById('shopRevenue').style.display = 'none';
  <% } %>
</script>
<% } %>






          <% if (serverdata.inviteURL) { %>
          <% if (serverdata.tags.some(tag => tag === 'NSFW')) { %>
          <!-- Przycisk NSFW (czerwony, 18+) -->
          <a href="<%= serverdata.inviteURL %>" target="_blank" rel="nofollow" class="btn btn-lg btn-danger mb-3" style="width: -webkit-fill-available;">
            <i class="bx bx-plus me-2 lead"></i>Dołącz do serwera (18+)
          </a>
          <% } else { %>
          <!-- Standardowy przycisk -->
          <a href="<%= serverdata.inviteURL %>" target="_blank" rel="nofollow" class="btn btn-lg btn-outline-secondary mb-3" style="width: -webkit-fill-available;">
            <i class="bx bx-plus me-2 lead"></i>Dołącz do serwera
          </a>
          <% } %>
          <% } else { %>
          <!-- Przycisk gdy brak dostępnego zaproszenia -->
          <a href="#" target="_blank" class="btn btn-lg btn-outline-secondary mb-3 disabled" style="width: -webkit-fill-available;">
            <i class="bx bx-plus me-2 lead"></i>Łącze serwera jest niedostępne
          </a>
          <% } %>

          <button class="btn btn-lg btn-outline-secondary mb-3" id="voteServer" style="width: -webkit-fill-available;">
            <i class="bx bx-like me-2 lead"></i>Zagłosuj
            <span class="badge bg-primary shadow-primary ms-3"><%= serverdata.votes.toLocaleString() %></span>
          </button>
		  
<% if (serverdata.stronaURL) { %>
<a href="<%= serverdata.stronaURL.startsWith('http') ? serverdata.stronaURL : 'https://' + serverdata.stronaURL %>" 
   target="_blank" 
   rel="nofollow"
   class="btn btn-lg btn-outline-secondary mb-3" 
   data-redirect 
   style="width: -webkit-fill-available;">
  <i class="bx bx-link-external me-2 lead"></i>Strona
</a>
<% } %>

<% if (serverdata.patroniteURL) { %>
<a href="<%= serverdata.patroniteURL.startsWith('http') ? serverdata.patroniteURL : 'https://' + serverdata.patroniteURL %>" 
   target="_blank"
   rel="nofollow"
   class="btn btn-lg btn-outline-secondary mb-3" 
   data-redirect 
   style="width: -webkit-fill-available;">
  <i class="bx bx-donate-heart me-2 lead"></i>Patronite
</a>
<% } %>

          <div id="result"></div>
		  

          <div class="border rounded-3 mb-4 mb-lg-5">
            <div class="g-0">

<div class="col d-flex align-items-center border-end-sm border-bottom p-3">
  <i class="bx bx-server text-primary fs-4"></i>
  <div class="ps-2 ms-1">
    <h3 class="h6 mb-0">Liczba członków</h3>
    <p class="fs-xs mb-0"><%= sbot.guilds.cache.get(serverdata.serverID)?.memberCount.toLocaleString() || 'Unknown' %></p>
  </div>
</div>

<div class="col border-end-sm border-bottom p-3">
  <div class="d-flex">
    <i class="bx bx-purchase-tag text-primary fs-4"></i>
    <h3 class="h6 mb-0 ps-2 ms-1">Tagi</h3>
  </div>
  <div class="ps-2 ms-1 mt-2 d-flex flex-wrap">
    <% serverdata.tags.forEach(tag => { %>
      <a href="/servers/<%= tag %>" class="badge bg-secondary me-2 mb-2"><%= tag %></a>
    <% }) %>
  </div>
</div>

<div class="col border-end-sm border-bottom p-3">
  <div class="d-flex">
    <i class="bx bx-happy-beaming text-primary fs-4"></i>
    <h3 class="h6 mb-0 ps-2 ms-1">Emoji</h3>
  </div>
  <div class="emoji-container ps-2 ms-1 mt-2" id="emojiContainer">
    <% sbot.guilds.cache.get(serverdata.serverID).emojis.cache.forEach(e => { %>
      <img style="max-width:32px; max-height:32px;" src="<%= e.url %>" />
    <% }) %>
  </div>
  <button id="showMoreBtn" class="btn btn-outline-secondary w-100 mt-2">Pokaż więcej</button>
</div>
<!-- Przycisk do udostępniania -->
<div class="col align-items-center border-end-sm border-bottom p-3">
  <div class="d-flex">
    <i class="bx bx-share-alt text-primary fs-4"></i>
    <h3 class="h6 mb-0 ps-2 ms-1">Udostępnij</h3>
  </div>

  <div class="social-share-buttons ps-2 ms-1">
    <!-- Przycisk do kopiowania linku -->
    <button class="social-button copy-link" onclick="copyToClipboard('https://discordzik.pl/server/<%=serverdata.serverID%>')">
      <i class="fas fa-link"></i>
    </button>
    <!-- Udostępnianie na Twitterze -->
    <a href="https://twitter.com/intent/tweet?url=https://discordzik.pl/server/<%=serverdata.serverID%>" target="_blank" class="social-button twitter">
      <i class="fab fa-twitter"></i>
    </a>
    <!-- Udostępnianie na Facebooku -->
    <a href="https://www.facebook.com/sharer/sharer.php?u=https://discordzik.pl/server/<%=serverdata.serverID%>" target="_blank" class="social-button facebook">
      <i class="fab fa-facebook-f"></i>
    </a>
  </div>
</div>

<!-- Dodajemy CSS -->
<style>
  .social-share-buttons {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-top: 20px;
    flex-wrap: wrap;
  }

  .social-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px;
    height: 50px;
    min-width: 50px; /* Zapobiega ściskaniu */
    min-height: 50px; /* Zapobiega ściskaniu */
    border-radius: 50%; /* Teraz na pewno będzie okrągły */
    border: 2px solid #ddd;
    background-color: #fff;
    color: #fff;
    font-size: 20px;
    text-decoration: none;
    transition: all 0.3s ease;
    cursor: pointer;
    padding: 0; /* Usuwamy domyślne paddingi */
    box-sizing: border-box; /* Uwzględniamy border w wymiarach */
    flex-shrink: 0; /* Zapobiega zmniejszaniu */
  }

  .social-button i {
    font-size: 22px;
  }

  /* Kolory przycisków */
  .social-button.copy-link {
    border-color: #6c757d;
    background-color: #6c757d;
  }

  .social-button.twitter {
    border-color: #1DA1F2;
    background-color: #1DA1F2;
  }

  .social-button.facebook {
    border-color: #3b5998;
    background-color: #3b5998;
  }

  .social-button.bsky {
    border-color: #0061F2;
    background-color: #0061F2;
  }

  /* Efekty na hover */
  .social-button:hover {
    transform: scale(1.1);
    border-color: #000;
  }
  
  .social-button i {
    font-size: 22px;
    color: white;
  }

  .social-button:hover i {
    color: white !important;
  }

  .social-button:active {
    transform: scale(0.95);
  }

  /* Responsywność */
  @media (max-width: 576px) {
    .social-share-buttons {
      gap: 10px;
    }
    .social-button {
      width: 45px;
      height: 45px;
      min-width: 45px;
      min-height: 45px;
    }
    .social-button i {
      font-size: 20px;
    }
  }

  /* Dodajemy obramówkę i odstępy */
  .d-flex {
    display: flex;
    align-items: center;
  }

  .border-end-sm {
    border-right: 1px solid #ddd;
  }

  .border-bottom {
    border-bottom: 1px solid #ddd;
  }

  .p-3 {
    padding: 15px;
  }
</style>

<script>
  function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(function() {
      // Możesz dodać powiadomienie, że link został skopiowany
      alert('Link został skopiowany do schowka: ' + text);
    }, function(err) {
      console.error('Błąd podczas kopiowania: ', err);
    });
  }
</script>


            </div>
          </div>
		  

        </div>
      </div>
    </div>
  </section>

    <% if (req.user && req.user.id == serverdata.ownerID) { %>
    <div class="modal fade" id="deleteServer" tabindex="-1" role="dialog">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Napewno? 😔</h5>
            <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <p>Po usunięciu serwera zostaje on usunięty z bazy danych i nikt nie będzie mógł go już odwiedzić.</p>
          </div>
          <p id="serverDeleteError"></p>
          <div class="modal-footer">
            <button class="btn btn-secondary btn-sm" type="button" data-bs-dismiss="modal">Zamknij</button>
            <button class="btn btn-danger btn-sm" type="button" id="serverdeletebtn">Usuń</button>
          </div>
        </div>
      </div>
    </div>
    <script>
      $('#serverdeletebtn').click(function() {
        fetch('/servers/delete/<%= serverdata.serverID %>', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        }).then(res => res.json()).then(data => {
          if (data.error == false) {
            $('#serverDeleteError').html('<div class="alert alert-success" role="alert">Serwer usunięty pomyślnie! Przekierowanie za 5 sekund...</div>');
            setTimeout(function() {
              window.location.href = '/servers';
            }, 5000);
          } else if (data.error == true) {
            $('#serverDeleteError').html(`<div class="alert alert-danger" role="alert">${data.message}</div>`);
          }
        })
      })
    </script>
    <% } %>
	

<section class="container mb-4 pb-lg-3">
  <% if (serverdata.rates && serverdata.rates?.length > 0) { %>
  <h2 class="h1 py-4"><span id="commentsCount"><%= serverdata.rates?.length %></span> Opinie</h2>
  <% } else { %>
  <h2 class="h1 py-4"><span id="commentsCount">0</span> Opinii</h2>
  <% } %>

  <% if (req.user) { %>
      <div class="position-relative ps-4 mt-4">
        <span class="position-absolute top-0 start-0 w-1 h-100 bg-primary"></span>
        <div class="d-flex align-items-center justify-content-between ps-3 pb-2 mb-1">
          <div class="d-flex align-items-center me-3">
            <img src="<%= `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}` %>" class="rounded-circle" width="40" height="40" alt="avatar">
            <div class="ps-3">
              <h6 class="fw-semibold mb-0"><%= req.user.username %></h6>
              <span class="fs-sm text-muted">
              </span>
            </div>
          </div>
          <button class="btn btn-outline-secondary my-1 me-1" id="postComment">Wyślij</button>
        </div>
    <div class="d-flex align-items-center justify-content-between ps-3 pb-2 mb-1">
      <div class="rating">
        <input type="radio" name="rating" value="5" id="5"><label for="5">☆</label>
        <input type="radio" name="rating" value="4" id="4"><label for="4">☆</label>
        <input type="radio" name="rating" value="3" id="3"><label for="3">☆</label>
        <input type="radio" name="rating" value="2" id="2"><label for="2">☆</label>
        <input type="radio" name="rating" value="1" id="1"><label for="1">☆</label>
      </div>
    </div>
    <textarea class="form-control" rows="3" name="serverComment" id="serverComment" required></textarea>
  </div>
  <% } else { %>
  <div class="position-relative ps-4 mt-4">
    <span class="position-absolute top-0 start-0 w-1 h-100 bg-primary"></span>
    <div class="d-flex align-items-center justify-content-between ps-3 pb-2 mb-1">
      <div class="d-flex align-items-center me-3">
        <img src="https://cdn.discordapp.com/embed/avatars/0.png" class="rounded-circle" width="40" height="40" alt="avatar">
        <div class="ps-3">
          <h6 class="fw-semibold mb-0">Ziomek</h6>
          <span class="fs-sm text-muted"><a href="#" class="fw-semibold text-decoration-none">@Ziomek</a></span>
        </div>
      </div>
      <button class="btn btn-outline-secondary my-1 me-1" type="button">Opublikuj</button>
    </div>
    <textarea class="form-control" rows="3" placeholder="Nie możesz komentować, ponieważ nie jesteś zalogowany." disabled></textarea>
  </div>
  <% } %>

  <div class="position-relative ps-4 mt-4">
    <div id="successComment"></div>
  </div>

  <div class="border-bottom ps-lg-2 ps-xxl-0" style="padding-bottom: 3rem !important">
    <% { %>
    <% for (let i = 5; i > 0; i--) { %>
    <% let rates = serverdata.rates?.filter(rate => rate.star_rate == i).length %>
    <div class="d-flex align-items-center mb-2">
      <div class="text-nowrap me-3">
        <span class="d-inline-block align-middle">
          <% if (i == 1) {%> 1&nbsp;<% } else {%> <%= i %> <% } %>
        </span>
        <i class="bx bx-star opacity-70 align-middle ms-1"></i>
      </div>
      <div class="progress w-100">
        <% let numberRate = serverdata.rates?.filter(r => r.star_rate == i)?.length / serverdata.rates?.length * 100 ? serverdata.rates?.filter(r => r.star_rate == i)?.length / serverdata.rates?.length * 100 : 0 %>
        <div class="progress-bar bg-gradient-primary" role="progressbar" style="width: <%= numberRate %>%;" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
          <%= rates %>
        </div>
      </div>
    </div>
    <% } %>
    <% } %>
  </div>

  <div id="newComment"></div>

  <% if (serverdata.rates && serverdata.rates?.length > 0) { %>
  <% serverdata.rates?.sort(function(a, b) {return new Date(b.date) - new Date(a.date)}); %>
  <% serverdata.rates?.map(rate => { %>
  <% let rateAuthor = rateAuthors.find(author => {return author.id === rate.author;}); %>
<div class="position-relative ps-4 mt-4" id="commentID_<%= rate.id %>">
  <span class="position-absolute top-0 start-0 w-1 h-100 bg-primary"></span>
  <div class="d-flex align-items-center justify-content-between ps-3 pb-2 mb-1">
    <div class="d-flex align-items-center me-3">
      <% if (rateAuthor.avatar) { %>
        <img src="https://cdn.discordapp.com/avatars/<%= rateAuthor.id %>/<%= rateAuthor.avatar %>.png" class="rounded-circle" width="48" alt="Avatar">
      <% } else { %>
        <img src="https://discordzik.pl/assets/img/def.jpg" class="rounded-circle" width="48" alt="Default Avatar">
      <% } %>
      <div class="ps-3">
        <div class="d-flex align-items-center">
                    <a href="/profile/<%= rateAuthor.id %>" class="text-decoration-none">
            <h6 class="fw-semibold mb-0 me-2"><%= rateAuthor.username %></h6>
          </a>
          <!-- Star Rating next to username -->
          <% for (let i = 0; i < rate.star_rate; i++) { %>
            <i class="bx bxs-star text-warning"></i>
          <% } %>
        </div>
        <span class="d-flex align-items-center fs-sm text-muted">
          <span class="role-icon me-1">
            <% if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(rateAuthor.id)?.roles.highest.name === "Admin") { %>
              <i class="bx bx-shield-alt-2 text-warning"></i>
			<% } else if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(rateAuthor.id)?.roles.highest.name === "Support") { %>
              <i class="bx bx-support text-info"></i>
            <% } else if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(rateAuthor.id)?.roles.highest.name === "Partner") { %>
              <i class="bx bx-bolt-circle text-info"></i>
            <% } else if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(rateAuthor.id)?.roles.highest.name === "Patron") { %>
              <i class="bx bx-donate-heart text-warning"></i>
            <% } else if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(rateAuthor.id)?.roles.highest.name === "Booster") { %>
              <i class="bx bx-rocket text-info"></i>
            <% } else { %>
              <i class="bx bx-user text-muted"></i>
            <% } %>
          </span>
          <a href="/profile/<%= rateAuthor.id %>" class="fw-semibold text-decoration-none">
            <%- bot.guilds.cache.get(global.config.server.id)?.members.cache.get(rateAuthor.id)?.roles.highest.name || "Użytkownik" %>
          </a>
<span class="ms-2 fs-sm text-muted date-hover">
  <%= moment(rate.date).fromNow() %>
  <span class="date-tooltip">
    <%= moment(rate.date).format('DD MMMM YYYY, HH:mm') %>
  </span>
</span>
      </div>
    </div>
<% if (req.user && rate.author === req.user.id) { %> 
  <a href="https://discordzik.pl/profile/<%= req.user.id %>/comments" class="btn btn-outline-primary btn-sm">
    Usuń
  </a>
<% } %>

        </div>
        <p class="ps-3 mb-0"><%= rate.message %></p>
      </div>
	  <div class="ps-3 mt-2">
  <% if (rate.replies && rate.replies.length > 0) { %>
  <div class="replies-container mb-3 ps-3 border-start border-2">
    <% rate.replies.forEach(reply => { 
      let replyAuthor = rateAuthors.find(author => author.id === reply.author);
    %>
<div class="reply-item mb-2 ps-3 pt-2 pb-2 rounded">
  <div class="d-flex align-items-start">
    <% if (reply.authorAvatar) { %>
      <img src="<%= reply.authorAvatarURL || `https://cdn.discordapp.com/avatars/${reply.author}/${reply.authorAvatar}.png` %>" 
           class="rounded-circle me-2" width="40" height="40" alt="Avatar"
           onerror="this.src='https://discordzik.pl/assets/img/def.jpg'">
    <% } else { %>
      <img src="https://discordzik.pl/assets/img/def.jpg" class="rounded-circle me-2" width="40" height="40" alt="Default Avatar">
    <% } %>
    <div class="w-100">
      <div class="d-flex justify-content-between">
        <div>
          <a href="/profile/<%= reply.author %>" class="text-decoration-none">
                  <h6 class="fw-semibold mb-0"><%= reply.authorName || "Nieznany" %></h6>
                </a>
          <div class="d-flex align-items-center fs-sm text-muted mt-1">
    <span class="role-icon me-1">
      <% if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(reply.author)?.roles.highest.name === "Admin") { %>
        <i class="bx bx-shield-alt-2 text-warning"></i>
	  <% } else if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(rateAuthor.id)?.roles.highest.name === "Support") { %>
        <i class="bx bx-support text-info"></i>
      <% } else if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(reply.author)?.roles.highest.name === "Partner") { %>
        <i class="bx bx-bolt-circle text-info"></i>
      <% } else if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(reply.author)?.roles.highest.name === "Patron") { %>
        <i class="bx bx-donate-heart text-warning"></i>
      <% } else if (bot.guilds.cache.get(global.config.server.id)?.members.cache.get(reply.author)?.roles.highest.name === "Booster") { %>
        <i class="bx bx-rocket text-info"></i>
      <% } else { %>
        <i class="bx bx-user text-muted"></i>
      <% } %>
    </span>
                  <a href="/profile/<%= reply.author %>" class="fw-semibold text-decoration-none">
                    <%- bot.guilds.cache.get(global.config.server.id)?.members.cache.get(reply.author)?.roles.highest.name || "Użytkownik" %>
                  </a>
    <span class="ms-2"><%= moment(reply.date).fromNow() %></span>
  </div>
</div>
        <% if (req.user && reply.author === req.user.id) { %>
          <a href="https://discordzik.pl/profile/<%= reply.author %>/comments" class="btn btn-outline-primary btn-sm ms-auto">
            Usuń
          </a>
        <% } %>

      </div>

          <p class="mb-0"><%= reply.message %></p>
        </div>
      </div>
    </div>
    <% }); %>
  </div>
<% } %>


  <% if (req.user) { %>
    <div class="reply-section mt-2">
      <button class="btn btn-link p-0 text-decoration-none reply-toggle" 
              data-comment-id="<%= rate.id %>">
        <i class="bx bx-reply me-1"></i>Odpowiedz
      </button>
      
      <div class="reply-form mt-2 d-none" data-comment-id="<%= rate.id %>">
        <div class="input-group">
          <input type="text" class="form-control reply-input" placeholder="Napisz odpowiedź...">
          <button class="btn btn-outline-primary reply-submit">Wyślij</button>
          <button class="btn btn-outline-secondary reply-cancel">Anuluj</button>
        </div>
      </div>
    </div>
  <% } %>
</div>
    <% }); %>
  <% } else { %>
  <div class="py-4">
    <div class="d-flex align-items-center justify-content-between pb-2 mb-1">
      <div class="d-flex align-items-center me-3">
        <div class="ps-3">
          <h6 class="mb-0" id="noReviewsYet">Brak komentarzy</h6>
        </div>
      </div>
    </div>
  </div>
  <% } %>
  
  <div class="py-4">
    <div class="d-flex align-items-center justify-content-between pb-2 mb-1">
      <div class="d-flex align-items-center me-3">
        <div class="ps-3">
          <a href="https://discordzik.pl/tickets" target="_blank" class="btn btn-lg btn-outline-secondary mb-3" style="width: -webkit-fill-available; background-color: #ff6666; border-color: #ff6666; color: white;">
            <i class="bx bx-shield me-2 lead"></i>Zgłoś Serwer
          </a>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- Popup Modal -->
<div id="modernPopup" class="modal fade" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content text-light" style="background-color: #0b0f19; border-radius: 10px; overflow: hidden;">
      
      <!-- Modal Header -->
      <div class="modal-header border-0 position-relative" style="padding: 1.5rem;">
        <div class="d-flex align-items-center w-100">
          <img src="https://discordzik.pl/assets/img/emoji/love.png" alt="Love Emoji" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 1rem;">
          <h5 class="modal-title fw-semibold mb-0">Ostrzeżenie</h5>
        </div>
        <button type="button" class="btn-close btn-close-white position-absolute end-0" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      
      <!-- Modal Body -->
      <div class="modal-body" style="padding: 2rem; font-size: 1rem; line-height: 1.5;">
        <p class="mb-3">
          Przechodzisz na stronę zewnętrzną, która nie jest zarządzana przez Discordzik. Upewnij się, że masz zaufanie do tej witryny przed kontynuacją.
        </p>
        <div id="popupDomain" class="alert alert-info d-flex align-items-center mt-3" style="gap: 0.5rem; background-color: #2d2d2d; border: none;">
          <i class="bx bx-globe fs-4 text-info"></i>
          <span id="domainDisplay">Ładowanie domeny...</span>
        </div>
        <div class="alert alert-warning d-flex align-items-center mt-3" style="gap: 0.5rem; background-color: #2d2d2d; border: none;">
          <i class="bx bx-error-circle fs-4 text-warning"></i>
          <span>Opuszczenie strony oznacza akceptację ryzyka.</span>
        </div>
      </div>
      
      <!-- Modal Footer -->
      <div class="modal-footer justify-content-between border-0" style="padding: 1.5rem;">
        <button type="button" class="btn btn-outline-light" data-bs-dismiss="modal" style="padding: 0.75rem 1.5rem;">Zamknij</button>
        <a id="confirmRedirect" href="#" class="btn btn-outline-info mt-3 mb-3 d-flex align-items-center justify-content-center" style="padding: 0.75rem 1.5rem;">
          Przejdź dalej
        </a>
      </div>
      
    </div>
  </div>
</div>
<script>
(function() {
  document.addEventListener('DOMContentLoaded', () => {
    const popup = document.getElementById('modernPopup'); // Modal z ID "modernPopup"
    const confirmRedirect = document.getElementById('confirmRedirect'); // Przycisk "Przejdź dalej"
    const domainDisplay = document.getElementById('domainDisplay'); // Element do wyświetlenia domeny
    let redirectURL = null;

    // Event Delegation for dynamically added elements
    document.body.addEventListener('click', (event) => {
      const button = event.target.closest('[data-redirect]');
      if (!button) return;

      event.preventDefault(); // Zapobiegamy domyślnemu działaniu linku
      redirectURL = button.getAttribute('href'); // Pobieramy URL
      const urlObject = new URL(redirectURL); // Tworzymy obiekt URL, by wyciągnąć domenę
      domainDisplay.textContent = urlObject.hostname; // Wyświetlamy domenę w modalu

      const modalInstance = new bootstrap.Modal(popup); // Tworzymy instancję modala
      modalInstance.show(); // Pokazujemy modal
    });

    // Obsługa kliknięcia "Przejdź dalej"
    confirmRedirect.addEventListener('click', () => {
      if (redirectURL) {
        window.open(redirectURL, '_blank'); // Otwórz link w nowej karcie
      }
    });
  });
})();
</script>

<style>
.popup-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.popup-content {
  background: white;
  padding: 20px;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.popup-actions {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-top: 20px;
}
</style>

  </main>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    var emojiContainer = document.getElementById('emojiContainer');
    var showMoreBtn = document.getElementById('showMoreBtn');

    // Sprawdź, czy jest wystarczająca liczba emotek
    var emojiCount = emojiContainer.querySelectorAll('img').length;

    if (emojiCount <= 10) { // Zmień wartość na próg liczby emotek, np. 10
      showMoreBtn.style.display = 'none';
    }

    // Dodaj obsługę kliknięcia dla przycisku
    showMoreBtn.addEventListener('click', function () {
      if (emojiContainer.classList.contains('expanded')) {
        emojiContainer.classList.remove('expanded');
        this.textContent = 'Pokaż więcej';
      } else {
        emojiContainer.classList.add('expanded');
        this.textContent = 'Pokaż mniej';
      }
    });
  });
</script>
  <%- include('../partials/footer') %>
</body>

</html>

<style>
  .rating {
    display: flex;
    flex-direction: row-reverse;
    justify-content: left;
  }

  .rating>input {
    display: none;
  }

  .rating>label {
    position: relative;
    width: 1.1em;
    font-size: 30px;
    color: #FFD700;
    cursor: pointer;
  }

  .rating>label::before {
    content: "\2605";
    position: absolute;
    opacity: 0;
  }

  .rating>label:hover:before,
  .rating>label:hover~label:before {
    opacity: 1 !important;
  }

  .rating>input:checked~label:before {
    opacity: 1;
  }

  .rating:hover>input:checked~label:before {
    opacity: 0.4;
  }
  .reply-section {
  position: relative;
}

.reply-toggle {
  color: #6c757d;
  font-size: 0.875rem;
  transition: color 0.2s;
}

.reply-toggle:hover {
  color: #0d6efd;
  text-decoration: none;
}

.reply-toggle i {
  font-size: 1rem;
  vertical-align: middle;
}

.reply-form {
  transition: all 0.3s ease;
}

.replies-container {
  margin-left: 20px;
  padding-left: 15px;
  border-left: 2px solid #eee;
}

.reply-item {
  padding: 8px;
  border-radius: 4px;
  transition: background-color 0.2s;
}



.reply-input {
  border-radius: 4px 0 0 4px !important;
}

.reply-submit {
  border-radius: 0 !important;
}

.reply-cancel {
  border-radius: 0 4px 4px 0 !important;
}
</style>

<script>
  $('#voteServer').click(function(e) {
    e.preventDefault();
    $.ajax({
      type: 'POST',
      url: '/server/<%= serverdata.serverID %>/vote',
      success: function(data) {
        if (data.error == false) {
          document.getElementById("voteServer").classList.add("disabled");
          document.getElementById("voteServer").innerHTML = '<i class="bx bx-like me-2 lead"></i>Zagłosowane'
          $('#result').html('<div class="alert alert-success" role="alert">' + data.message + '</div>');
          setTimeout(function() {
            document.getElementById("result").innerHTML = "";
            document.getElementById("voteServer").classList.remove("disabled");
            document.getElementById("voteServer").innerHTML = '<i class="bx bx-like me-2 lead"></i>Zagłosuj <span class="badge bg-primary shadow-primary ms-3"><%= serverdata.votes + 1 %></span>'
          }, 5000);
        } else if (data.error == true) {
          document.getElementById("voteServer").classList.add("disabled");
          document.getElementById("voteServer").innerHTML = '<i class="bx bx-like me-2 lead"></i>Głosowanie <span class="badge bg-primary shadow-primary ms-3">Zablokowane</span>'
          $('#result').html('<div class="alert alert-danger" role="alert">' + data.message + '</div>');
          setTimeout(function() {
            document.getElementById("result").innerHTML = "";
            document.getElementById("voteServer").classList.remove("disabled");
            document.getElementById("voteServer").innerHTML = '<i class="bx bx-like me-2 lead"></i>Zagłosuj <span class="badge bg-primary shadow-primary ms-3"><%= serverdata.votes %></span>'
          }, 5000);
        }
      },
    });
  });
</script>

<% if (req.user) { %>
<script>
  document.onclick = function(e) {
    if (e.target.id == "postComment") {
      e.preventDefault();
      let serverID = '<%= serverdata.serverID %>';
      let comment = document.getElementById("serverComment").value;
      let stars = document.querySelector('input[name="rating"]:checked')?.value || "0";
      fetch("/servers/comment", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          serverID,
          comment,
          stars
        })
      }).then(res => res.json()).then(data => {
        if (data.error == false) {
          document.getElementById("successComment").innerHTML = '<div class="alert alert-success alert-dismissible fade show" role="alert"><div class="d-flex align-items-center"><i class="bx bxs-check-circle text-success fs-4 me-2"></i><span>' + data.message + '</span></div><button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>';
          document.getElementById("newComment").innerHTML = `
          <div class="position-relative ps-4 mt-4" id="commentID_${data.id}">
          <div class="d-flex align-items-center justify-content-between ps-3 pb-2 mb-1">
            <span class="position-absolute top-0 start-0 w-1 h-100 bg-primary"></span>
            <div class="d-flex align-items-center me-3">
              <img src="https://cdn.discordapp.com/avatars/<%= req.user.id %>/<%= req.user.avatar %>.png" class="rounded-circle" width="48" alt="Avatar">
              <div class="ps-3">
                <h6 class="fw-semibold mb-0">
                  <%= req.user.username %>
                  <span id="newstars"></span>
                </h6>
                <span class="fs-sm text-muted"><%= moment().fromNow() %></span>
              </div>
            </div>
          </div>
          <p class="ps-3 mb-0"><a href="/profile/<%= req.user.id %>" class="fw-semibold text-decoration-none">@<%= req.user.username %></a> ` + comment + `</p>
          </div>`;
          document.getElementById("serverComment").value = "";
          document.getElementById("noReviewsYet")?.remove();
          document.querySelector('input[name="rating"]:checked').checked = false;
          data.stars.forEach(star => {
            document.getElementById(`${star}stars`).style.width = "100%";
          });

          document.getElementById("commentsCount").innerHTML = parseInt(document.getElementById("commentsCount").innerHTML) + 1;
          setTimeout(function() {
            document.getElementById("successComment").classList.add("d-none");
          }, 5000);
        } else if (data.error == true) {
          document.getElementById("successComment").innerHTML = '<div class="alert alert-danger alert-dismissible fade show" role="alert"><div class="d-flex align-items-center"><i class="bx bxs-error-circle text-danger fs-4 me-2"></i><span>' + data.message + '</span></div><button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>';
        }
      })
    }
  }
  // Dodaj to na końcu istniejącego skryptu
document.addEventListener('click', function(e) {
  // Obsługa przycisku "Odpowiedz"
  if (e.target.classList.contains('reply-toggle') || e.target.closest('.reply-toggle')) {
    const toggleBtn = e.target.classList.contains('reply-toggle') ? e.target : e.target.closest('.reply-toggle');
    const replySection = toggleBtn.closest('.reply-section');
    const replyForm = replySection.querySelector('.reply-form');
    
    replyForm.classList.toggle('d-none');
    if (!replyForm.classList.contains('d-none')) {
      replyForm.querySelector('.reply-input').focus();
    }
  }
  
  // Obsługa wysyłania odpowiedzi
  if (e.target.classList.contains('reply-submit')) {
    const replyForm = e.target.closest('.reply-form');
    const commentId = replyForm.getAttribute('data-comment-id');
    const replyInput = replyForm.querySelector('.reply-input');
    const message = replyInput.value.trim();
    
    if (!message) return;
    
    fetch("/servers/comment/reply", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        commentId: commentId,
        serverID: '<%= serverdata.serverID %>',
        message: message
      })
    }).then(res => res.json()).then(data => {
      if (data.error === false) {
        // Dodaj nową odpowiedź do widoku
        const repliesContainer = replyForm.closest('.reply-section').querySelector('.replies-container') || 
          (() => {
            const container = document.createElement('div');
            container.className = 'replies-container mb-3';
            replyForm.closest('.reply-section').insertBefore(container, replyForm);
            return container;
          })();
        
const replyElement = document.createElement('div');
replyElement.className = 'reply-item mb-2 ps-3 border-start border-2';
replyElement.innerHTML = `
  <div class="d-flex align-items-center">
    <img src="https://cdn.discordapp.com/avatars/${data.reply.author}/${data.reply.authorAvatar}.png" 
         class="rounded-circle me-2" width="32" alt="Avatar">
    <div>
      <span class="fw-semibold">${data.reply.authorName}</span>
      <span class="text-muted ms-2 fs-sm">teraz</span>
      <p class="mb-0">${message}</p>
    </div>
  </div>
`;
        
        repliesContainer.appendChild(replyElement);
        replyInput.value = '';
        replyForm.classList.add('d-none');
      } else {
        alert(data.message || 'Wystąpił błąd podczas wysyłania odpowiedzi');
      }
    }).catch(error => {
      console.error('Error:', error);
      alert('Wystąpił błąd podczas wysyłania odpowiedzi');
    });
  }
  
  // Obsługa anulowania odpowiedzi
  if (e.target.classList.contains('reply-cancel')) {
    const replyForm = e.target.closest('.reply-form');
    replyForm.querySelector('.reply-input').value = '';
    replyForm.classList.add('d-none');
  }
});
</script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<% } %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/locale/pl.min.js"></script>

<script>
  // Funkcja dla cat-rain
  function initCatRain() {
    const catContainer = document.getElementById('catRainContainer');
    if (!catContainer) return;
    
    catContainer.style.display = 'block';
    
    function createCat() {
      const cat = document.createElement('div');
      cat.className = 'falling-cat';
      cat.textContent = '🐱';
      
      const size = 16 + Math.random() * 20;
      cat.style.fontSize = `${size}px`;
      cat.style.left = `${Math.random() * 100}vw`;
      cat.style.top = '-30px';
      cat.style.animationDuration = `${3 + Math.random() * 7}s`;
      cat.style.opacity = 0.7 + Math.random() * 0.3;
      
      catContainer.appendChild(cat);
      
      setTimeout(() => {
        cat.remove();
      }, parseFloat(cat.style.animationDuration) * 1000);
    }
    
    setInterval(createCat, 500);
    
    for (let i = 0; i < 10; i++) {
      setTimeout(createCat, i * 300);
    }
  }

  // Funkcja dla money-rain
  function initMoneyRain() {
    const moneyContainer = document.getElementById('moneyRainContainer');
    if (!moneyContainer) return;
    
    moneyContainer.style.display = 'block';
    
    const moneySymbols = ['💰', '💵', '💲', '🪙', '💸', '💴', '💶'];
    
    function createMoney() {
      const money = document.createElement('div');
      money.className = 'falling-money';
      money.textContent = moneySymbols[Math.floor(Math.random() * moneySymbols.length)];
      
      const size = 16 + Math.random() * 20;
      money.style.fontSize = `${size}px`;
      money.style.left = `${Math.random() * 100}vw`;
      money.style.top = '-30px';
      money.style.animationDuration = `${2 + Math.random() * 5}s`;
      money.style.opacity = 0.7 + Math.random() * 0.3;
      
      moneyContainer.appendChild(money);
      
      setTimeout(() => {
        money.remove();
      }, parseFloat(money.style.animationDuration) * 1000);
    }
    
    setInterval(createMoney, 500);
    
    for (let i = 0; i < 15; i++) {
      setTimeout(createMoney, i * 200);
    }
  }

  // Funkcja dla beer-rain
  function initbeerRain() {
    const beerContainer = document.getElementById('beerRainContainer');
    if (!beerContainer) return;
    
    beerContainer.style.display = 'block';
    
    const beerSymbols = ['🍺', '🍻', '🍷', '🍸', '🍹', '🥂', '🍾'];
    const beerColors = ['#FFD700', '#FFA500', '#FF8C00', '#F4A460', '#DAA520'];
    
    function createbeer() {
      const beer = document.createElement('div');
      beer.className = 'falling-beer';
      beer.textContent = beerSymbols[Math.floor(Math.random() * beerSymbols.length)];
      
      const size = 20 + Math.random() * 25;
      beer.style.fontSize = `${size}px`;
      beer.style.left = `${Math.random() * 100}vw`;
      beer.style.top = '-40px';
      beer.style.animationDuration = `${3 + Math.random() * 6}s`;
      beer.style.opacity = 0.8 + Math.random() * 0.2;
      beer.style.color = beerColors[Math.floor(Math.random() * beerColors.length)];
      beer.style.fontWeight = 'bold';
      beer.style.textShadow = '1px 1px 3px rgba(0,0,0,0.8)';
      
      beerContainer.appendChild(beer);
      
      setTimeout(() => {
        beer.remove();
      }, parseFloat(beer.style.animationDuration) * 1000);
    }
    
    setInterval(createbeer, 500);
    
    for (let i = 0; i < 12; i++) {
      setTimeout(createbeer, i * 250);
    }
  }

  // Inicjalizacja odpowiedniego efektu w zależności od motywu
  document.addEventListener('DOMContentLoaded', function() {
    const theme = document.querySelector('.server-theme-wrapper').getAttribute('data-theme');
    
    if (theme === 'cat-rain') {
      initCatRain();
    } else if (theme === 'money-rain') {
      initMoneyRain();
    } else if (theme === 'beer-rain') {
      initbeerRain();
    }
  });
</script>
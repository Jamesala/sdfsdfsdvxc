<!DOCTYPE html>
<html lang="en">

<meta http-equiv="content-type" content="text/html;charset=utf-8" />

<head>
  <title>Discordzik | Edytuj Bota</title>
  <link rel="icon" href="/assets/img/favicon.ico" type="image/x-icon">
  <link rel="shortcut icon" href="/assets/img/favicon.ico" type="image/x-icon">
  <meta http-equiv="content-type" content="text/html;charset=utf-8" />
  <meta name="google-adsense-account" content="ca-pub-9136474966764887">
  <meta name="title" content="Discordzik | Edytuj Bota">
  <meta name="keywords" content="Discord, Discordzik, Polskie serwery Discord, polskie serwery, serwery Discord, polski Discord, społeczność Discord, najlepsze serwery Discord, dołącz do serwera Discord, polskie społeczności online, polski czat, serwery do gier, polskie serwery gier, polski gaming, serwery Discord dla graczy, serwery Discord dla uczniów, polskie grupy Discord, Discord polska, forum Discord, polskie grupy gamingowe, serwery Discord do nauki, serwery Discord do rozmów, serwery Discord do grania, polskie boty Discord, boty Discord, najlepsze boty Discord, darmowe boty Discord, boty muzyczne Discord, boty moderacyjne Discord, boty do gier Discord, automatyzacja na Discordzie, boty do ankiet Discord, boty do zarządzania Discord, polskie boty muzyczne, polskie boty moderacyjne, polskie narzędzia Discord">
  <meta name="description" content="Discordzik to najlepsze źródło polskich serwerów i botów Discord! Odkryj grupy tematyczne, gamingowe i edukacyjne, znajdź nowych znajomych i dołącz do społeczności pełnej pasjonatów z całej Polski.">
  <meta name="theme-color" content="#5024f3">
  <meta name="og:site_name" content="Discordzik.pl">
  <meta property="og:type" content="website">
  <meta property="og:url" content="<%= config.website.url %>">
  <meta property="og:title" content="Discordzik | Edytuj Bota">
  <meta property="og:description" content="Discordzik to najlepsze źródło polskich serwerów i botów Discord! Odkryj grupy tematyczne, gamingowe i edukacyjne, znajdź nowych znajomych i dołącz do społeczności pełnej pasjonatów z całej Polski.">
  <meta property="og:image" content="/assets/img/banner.png">
  <meta property="og:image:secure_url" content="/assets/img/banner.png">
  <meta property="og:image:width" content="1200">
  <meta property="og:image:height" content="630">
  <meta property="og:image:type" content="image/png">

  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:url" content="<%= config.website.url %>">
  <meta property="twitter:title" content="Discordzik | Edytuj Bota">
  <meta property="twitter:description" content="Discordzik to najlepsze źródło polskich serwerów i botów Discord! Odkryj grupy tematyczne, gamingowe i edukacyjne, znajdź nowych znajomych i dołącz do społeczności pełnej pasjonatów z całej Polski.">
  <meta property="twitter:image" content="/assets/img/banner.png">
  <meta property="twitter:image:width" content="1200">
  <meta property="twitter:image:height" content="360">
  <meta property="summary_large_image" content="/assets/img/banner.png">
</head>

<%- include('../partials/head') %>

<body>
  <%- include('../partials/spinner') %>
  <main class="page-wrapper">
    <%- include('../partials/header') %>

    <section class="container mt-1 mb-1 pt-1 pb-lg-1">
      <div class="row gy-4"></div>
    </section>

    <section class="container mb-5 pb-lg-5">
      <div class="mb-4 mb-lg-5">
        <div class="accordion-item border-0 rounded-3 shadow-sm mb-3" style="padding: 10px;">
          <figcaption class="card-footer d-flex align-items-center border-0" style="padding: 3px;">
            <img src="<%= bot.users.cache.get(botdata.botID)?.displayAvatarURL() || 'https://cdn.discordapp.com/embed/avatars/0.png' %>" width="60" class="rounded-circle" alt="Reaction Roles">
            <div class="ps-3">
              <h6 class="fw-semibold lh-base mb-0">
                <%= botdata.username %>
              </h6>
              <span class="fs-sm text-muted"><%= botdata.shortDesc %></span>
            </div>
          </figcaption>
        </div>
      </div>

      <div class="alert d-flex alert-warning" role="alert">
        <i class="bx bx-error lead me-3"></i>
        <div>
          <h6 class="alert-heading mb-1">Uwaga!</h6>
          <p class="mb-0">
            Zamierzasz edytować bota <strong><%= botdata.username %></strong>. Upewnij się, że edytujesz właściwego bota.<br>
            - <strong>ID Współwłaścicieli:</strong> Jeśli którykolwiek z identyfikatorów współwłaścicieli jest nieprawidłowy, zostanie on automatycznie usunięty po przesłaniu.<br>
          </p>
        </div>
      </div>

      <div class="alert d-flex alert-primary d-none" role="alert">
        <i class="bx bx-bell lead me-3"></i>
        <div>
          <h6 class="alert-heading mb-1">Zmiany!</h6>
          <p class="mb-0">
            Zmieniając informacje o swoim bocie, wyrażasz zgodę na <a href="/tos">Warunki korzystania</a>.
          </p>
        </div>
      </div>

      <div class="border-bottom py-5 ps-lg-2 ps-xxl-0">

        <form class="needs-validation">
          <div class="mb-4 row align-items-center">
            <label class="col-md-2 col-form-label fs-sm" for="text-input">Nazwa bota</label>
            <div class="col-md-10">
              <input class="form-control" type="text" name="botName" id="botName" value="<%= botdata.username %>" disabled>
              <div class="form-text">Nazwa Twojego bota.</div>
            </div>
          </div>

          <div class="mb-4 row align-items-center">
            <label class="col-md-2 col-form-label fs-sm" for="text-input">ID Clienta</label>
            <div class="col-md-10">
              <input class="form-control" type="text" name="botID" id="botID" value="<%= botdata.botID %>" disabled>
              <div class="form-text">Identyfikator klienta Twojego bota</div>
            </div>
          </div>

          <div class="mb-4 row align-items-center">
            <label class="col-md-2 col-form-label fs-sm" for="text-input">Prefix <code>*</code></label>
            <div class="col-md-10 was-validated">
              <input class="form-control" type="text" name="prefix" id="prefix" value="<%= botdata.prefix %>" required>
              <div class="form-text">Prefix Twojego bota.</div>
            </div>
          </div>

          <div class="alert alert-info alert-dismissible fade show" role="alert">
            <span class="fw-bold">Alert ostrzegawczy:</span> Jeśli podasz nieprawidłowe informacje, Twój bot może zostać usunięty z naszej listy.
            <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
          <div class="d-sm-flex">
            <div class="w-100 me-4">
              <div class="mb-3">
                <label class="col-md-2 col-form-label fs-sm" for="text-input">Link Zaproszenia</label>
                <div class="form-text">Adres URL zaproszenia Twojego bota.</div>
              </div>
              <div class="mb-3 mb-sm-0">
                <input class="form-control mb-4" type="text" name="inviteURL" id="inviteURL" value="<%= botdata.inviteURL %>" placeholder="https://discord.com/oauth2/authorize?client_id=CLIENT_ID&scope=bot&permissions=0">
              </div>
              <div class="mb-3">
                <label class="col-md-2 col-form-label fs-sm" for="text-input">Link do pomocy</label>
                <div class="form-text">Zaproszenie do serwera pomocy technicznej, do którego może dołączyć każdy, kto potrzebuje pomocy z botem.</div>
              </div>
              <div class="mb-3 mb-sm-0">
                <input class="form-control mb-4" type="text" name="supportURL" id="supportURL" value="<%= botdata.supportURL %>" placeholder="https://discord.gg/xyzpomoc">
              </div>
              <div class="mb-3">
                <label class="col-md-2 col-form-label fs-sm" for="text-input">Strona</label>
                <div class="form-text ">Link do strony bota lub twórcy. (opcjonalne)</div>
              </div>
              <div class="mb-3 mb-sm-0">
                <input class="form-control mb-4" type="text" name="websiteURL" id="websiteURL" value="<%= botdata.websiteURL %>" placeholder="https://discordzik.pl/">
              </div>
            </div>
            <div class="w-100">
              <div class="mb-3">
                <label class="col-md-2 col-form-label fs-sm" for="text-input">Webhook</label>
                <div class="form-text">To będzie webhook, w którym będą publikowane wszystkie głosy. (opcjonalne)</div>
              </div>
              <div class="mb-3 mb-sm-0">
                <input class="form-control mb-4" type="text" name="webhookURL" id="webhookURL" value="<%= botdata.webhookURL %>" placeholder="https://discord.com/api/webhooks/WEBHOOK_ID/WEBHOOK_TOKEN">
              </div>
              <div class="mb-3">
                <label class="col-md-2 col-form-label fs-sm" for="text-input">Github</label>
                <div class="form-text">Adres URL repozytorium Twojego bota w serwisie Github. (opcjonalne)</div>
              </div>
              <div class="mb-3 mb-sm-0">
                <input class="form-control mb-4" type="text" name="githubURL" id="githubURL" value="<%= botdata.githubURL %>" placeholder="https://github.com/">
              </div>
			  <div class="mb-3">
                <label class="col-md-2 col-form-label fs-sm" for="text-input">Donate</label>
                <div class="form-text">Link strony donate twojego bota. (opcjonalne)</div>
              </div>
              <div class="mb-3 mb-sm-0">
                <input class="form-control mb-4" type="text" name="donateURL" id="donateURL" value="<%= botdata.donateURL %>" placeholder="https://wspierajmniexyz.pl/">
              </div>
            </div>
          </div>
		  <div class="mb-4 row align-items-center">
    <label class="col-md-2 col-form-label fs-sm" for="framework">Framework/Language</label>
    <div class="col-md-10">
        <select class="form-select" name="framework" id="framework" style="background-color: #10141e; color: white;">
            <option value="" disabled selected>Wybierz framework/language</option>
            <option value="Discord.js" <%= botdata.framework === 'Discord.js' ? 'selected' : '' %>>Discord.js (JavaScript)</option>
            <option value="Discord.py" <%= botdata.framework === 'Discord.py' ? 'selected' : '' %>>Discord.py (Python)</option>
            <option value="Eris" <%= botdata.framework === 'Eris' ? 'selected' : '' %>>Eris (JavaScript)</option>
            <option value="JDA" <%= botdata.framework === 'JDA' ? 'selected' : '' %>>JDA (Java)</option>
            <option value="Discord4J" <%= botdata.framework === 'Discord4J' ? 'selected' : '' %>>Discord4J (Java)</option>
            <option value="Disnake" <%= botdata.framework === 'Disnake' ? 'selected' : '' %>>Disnake (Python)</option>
            <option value="Nextcord" <%= botdata.framework === 'Nextcord' ? 'selected' : '' %>>Nextcord (Python)</option>
            <option value="Pycord" <%= botdata.framework === 'Pycord' ? 'selected' : '' %>>Pycord (Python)</option>
            <option value="Other" <%= botdata.framework === 'Other' ? 'selected' : '' %>>Inny</option>
        </select>
        <div class="form-text">Wybierz framework/language w którym został napisany Twój bot</div>
    </div>
</div>
		  <!-- Custom Banner Section -->
<section class="ps-lg-2 ps-xxl-0 mb-3">
  <h2 class="h4 d-flex align-items-center">
    Link do Tła
    <% if (botdata.rank === 'GOLD') { %>
      <span class="gold-tag ms-2">GOLD</span>
    <% } else if (botdata.rank === 'PRO') { %>
      <span class="pro-tag ms-2">PRO</span>
    <% } else { %>
      <span class="locked-tag ms-2">WYMAGANY STATUS</span>
    <% } %>
  </h2>

  <div class="form-text">
    Dodaj link do niestandardowego tła dla swojego bota.
    Tylko formaty URL .jpg, .png, .webp są obsługiwane.
    <% if (!(botdata.rank === 'PRO' || botdata.rank === 'GOLD')) { %>
      <div class="text-warning mt-1">Ta funkcja wymaga statusu PRO lub GOLD</div>
    <% } %>
  </div>

  <input
    type="url"
    id="customBannerURL"
    name="customBannerURL"
    class="form-control"
    placeholder="Wprowadź URL do tła"
    style="background-color: #0b0f19; color: #f0f1f2;"
    value="<%= botdata.customBannerURL || '' %>"
    <%= (botdata.rank === 'PRO' || botdata.rank === 'GOLD') ? '' : 'disabled' %>
  />
</section>
<!-- Vanity URL Section -->
<section class="ps-lg-2 ps-xxl-0 mb-3">
  <h2 class="h4 d-flex align-items-center">
    Unikalny URL
  </h2>
  <div class="form-text">Dodaj unikalny URL dla swojego bota. Może to być łatwiejszy sposób na dostęp do strony bota.</div>
  <div class="d-flex">
    <input
      type="text"
      class="form-control"
      value="discordzik.pl/bot/"
      disabled
      style="background-color: #0b0f19; color: #f0f1f2; border-right: 0; width: 180px;" 
    />
    <input
      type="text"
      id="vanityURL"
      name="vanityURL"
      class="form-control"
      placeholder="Wprowadź nazwę bota"
      style="background-color: #0b0f19; color: #f0f1f2; border-left: 0;"
      value="<%= botdata.vanityURL || '' %>"
    />
  </div>
</section>

          <div class="mb-4 row align-items-center">
            <label class="col-md-2 col-form-label fs-sm" for="text-input">Współwłaściciele</label>
            <div class="form-text">Współwłaścicielami Twojego bota są te osoby. Po prostu wpisz każdego współwłaściciela ID w polu poniżej, a następnie kliknij przycisk Dodaj, aby dodać więcej niż jednego współwłaściciela. Wybierając opcję Usuń obok ich ID, możesz również wyeliminować współwłaścicieli.</div>
            <div class="input-group mb-4">
              <input class="form-control" type="text" name="coowners" id="coowners" placeholder="CoOwner ID" aria-label="CoOwner ID">
              <button class="btn btn-secondary" type="button" id="addCoowner">Dodaj</button>
            </div>
            <% if (coowners.length > 0) { %>
            <% for (let i = 0; i < coowners.length; i++) { %>
            <div class="input-group mb-4">
              <span class="input-group-text">
                <i class="bx bx-user fs-lg"></i>
              </span>
              <input class="form-control" type="text" value="<%= coowners[i].username %> (<%= coowners[i].id %>)" disabled>
              <button class="btn btn-danger" type="button" id="removeCoowners<%= coowners[i].id %>">Usuń</button>
            </div>
            <% } %>
            <% } %>
          </div>
          <script>
            document.querySelectorAll('[id^="removeCoowners"]').forEach(item => {
              item.addEventListener('click', event => {
                let id = item.id.replace('removeCoowners', '');
                let div = document.getElementById('removeCoowners' + id).parentElement;
                div.remove();
              })
            });
            document.querySelectorAll('[id^="addCoowner"]').forEach(item => {
              item.addEventListener('click', event => {
                let input = item.parentElement.children[0].value;
                if (input == '') return;
                let div = document.createElement('div');
                div.className = 'input-group mb-4';
                div.innerHTML = `
                <span class="input-group-text">
                  <i class="bx bx-user fs-lg"></i>
                </span>
                <input class="form-control" type="text" value="${input}" disabled>
                <button class="btn btn-danger" type="button" id="removeCoowners${input}">Usuń</button>
                `;
                item.parentElement.parentElement.appendChild(div);
                item.parentElement.children[0].value = '';
                document.querySelectorAll('[id^="removeCoowners"]').forEach(item => {
                  item.addEventListener('click', event => {
                    let id = item.id.replace('removeCoowners', '');
                    let div = document.getElementById('removeCoowners' + id).parentElement;
                    div.remove();
                  })
                });
              })
            });
          </script>

          <section class="ps-lg-2 ps-xxl-0">
            <h2 class="h4">Tagi</h2>
            <div class="form-text">
              Tagi służą do kategoryzowania Twojego bota. Możesz wybrać do 20 tagów dla swojego bota. Jeśli nie widzisz tagu, który Twoim zdaniem powinien mieć Twój bot, <a href="/discord" target="_blank">Skontaktuj się z nami</a>.
            </div>
            <div class="card mb-4">
              <div class="card-body">
                <div class="row row-cols-sm-4 row-cols-2 gy-2 mb-3">
                  <% for (let i = 0; i < global.config.website.botTags.length; i++) { %>
                  <div class="col">
                    <div class="form-check mb-0">
                      <input type="checkbox" class="form-check-input" id="tag<%= global.config.website.botTags[i] %>" name="tags" value="<%= global.config.website.botTags[i] %>" <% if (botdata.tags.includes(global.config.website.botTags[i])) { %> checked <% } %>>
                      <label for="s-daily-newsletter" class="form-check-label"><%= global.config.website.botTags[i] %></label>
                    </div>
                  </div>
                  <% } %>
                </div>
                <h5 class="h5">Wybrane Tagi</h5>
                <div class="row row-cols-sm-4 row-cols-2 gy-2 mb-3" id="selectedTags"></div>
                <Script>
                  document.querySelectorAll('[name="tags"]').forEach(item => {
                    if (item.checked) {
                      let div = document.createElement('div');
                      div.className = 'col';
                      div.innerHTML = `
                      <div class="form-check mb-0">
                        <input type="checkbox" class="form-check-input" id="tag${item.value}" name="tags" value="${item.value}" checked disabled>
                        <label for="s-daily-newsletter" class="form-check-label">${item.value}</label>
                      </div>
                      `;
                      document.getElementById('selectedTags').appendChild(div);
                    }
                  });

                  document.querySelectorAll('[name="tags"]').forEach(item => {
                    item.addEventListener('change', event => {
                      let tags = document.getElementById('selectedTags');
                      let tag = item.value;
                      if (item.checked == true) {
                        let div = document.createElement('div');
                        div.className = 'col';
                        div.innerHTML = `
                        <div class="form-check mb-0">
                          <input type="checkbox" class="form-check-input" id="tag${tag}" name="tags" value="${tag}" checked disabled>
                          <label for="s-daily-newsletter" class="form-check-label">${tag}</label>
                        </div>
                        `;
                        tags.appendChild(div);
                      } else {
                        // remove it from the panel
                        let div = document.getElementById('selectedTags').children;
                        for (let i = 0; i < div.length; i++) {
                          if (div[i].children[0].children[1].innerHTML == tag) {
                            div[i].remove();
                          }
                        }
                      }
                    })
                  });

                  // if 0 selected show a message "no tags selected"
                  if (document.getElementById('tags').children.length == 0) {
                    let div = document.createElement('div');
                    div.className = 'col';
                    div.innerHTML = `
                    <div class="form-check mb-0">
                      <label for="s-daily-newsletter" class="form-check-label">Nie wybrano tagów</label>
                    </div>
                    `;
                    document.getElementById('tags').appendChild(div);
                  }
                </Script>
              </div>
            </div>
          </section>
		 
		  
		  <div id="commands-section">
    <h4>Komendy Bota</h4>
    <div class="form-text">Dodaj i edytuj komendy bota (opcjonalne)</div>
    <div id="commands-list">
        <% if (botdata.commands && botdata.commands.length > 0) { %>
            <% botdata.commands.forEach((cmd, index) => { %>
                <div class="command-item">
                    <div class="command-entry" style="margin-bottom: 15px;">
                        <label>Nazwa Komendy:</label>
                        <input type="text" class="form-control command-name" value="<%= cmd.name %>" placeholder="Nazwa Komendy" required maxlength="30">
                        <label>Opis Komendy:</label>
                        <textarea class="form-control command-description" placeholder="Opis Komendy" required style="margin-bottom: 10px;" maxlength="100"><%= cmd.description %></textarea>
                        <button type="button" class="btn btn-danger remove-command">Usuń</button>
                    </div>
                </div>
            <% }); %>
        <% } %>
    </div>
    <button type="button" id="add-command" class="btn btn-secondary mt-3" style="margin-bottom: 20px;">Dodaj Komendę</button>
</div>
<script>
    // Add new command item
    document.getElementById('add-command').addEventListener('click', () => {
        const commandsList = document.getElementById('commands-list');
        const commandItems = commandsList.getElementsByClassName('command-item');

        if (commandItems.length < 40) { // Limit do 10 komend
            const commandItem = document.createElement('div');
            commandItem.className = 'command-item';
            commandItem.innerHTML = `
                <div class="command-entry" style="margin-bottom: 15px;">
                    <label>Nazwa Komendy:</label>
                    <input type="text" class="form-control command-name" placeholder="Nazwa Komendy" required maxlength="30">
                    <label>Opis Komendy:</label>
                    <textarea class="form-control command-description" placeholder="Opis Komendy" required style="margin-bottom: 10px;" maxlength="100"></textarea>
                    <button type="button" class="btn btn-danger remove-command">Usuń</button>
                </div>
            `;
            commandsList.appendChild(commandItem);

            // Add event listener for remove button
            commandItem.querySelector('.remove-command').addEventListener('click', () => {
                commandItem.remove();
            });
        } else {
            alert('Możesz dodać maksymalnie 10 komend.');
        }
    });

    // Add remove functionality to existing command items
    document.querySelectorAll('.remove-command').forEach(button => {
        button.addEventListener('click', (event) => {
            event.target.closest('.command-item').remove();
        });
    });
</script>


<div id="faq-section">
    <h4>FAQ</h4>
	<div class="form-text">Dodaj odpowiedzi na najczęściej zadawane pytania (opcjonalne)</div>
    <div id="faq-list">
        <% if (botdata.faq && botdata.faq.length > 0) { %>
            <% botdata.faq.forEach((entry, index) => { %>
                <div class="faq-item">
                    <div class="faq-entry" style="margin-bottom: 15px;">
                        <label>Pytanie:</label>
                        <input type="text" class="form-control faq-question" value="<%= entry.question %>" placeholder="Pytanie" required maxlength="50">
                        <label>Odpowiedź:</label>
                        <textarea class="form-control faq-answer" placeholder="Odpowiedź" required style="margin-bottom: 10px;" maxlength="100"><%= entry.answer %></textarea>
                        <button type="button" class="btn btn-danger remove-faq">Usuń</button>
                    </div>
                </div>
            <% }); %>
        <% } %>
    </div>
    <button type="button" id="add-faq" class="btn btn-secondary mt-3" style="margin-bottom: 20px;">Dodaj</button>
</div>

<script>
    // Add new FAQ item
    document.getElementById('add-faq').addEventListener('click', () => {
        const faqList = document.getElementById('faq-list');
        const faqItems = faqList.getElementsByClassName('faq-item');

        if (faqItems.length < 6) { // Check if the maximum limit is reached
            const faqItem = document.createElement('div');
            faqItem.className = 'faq-item';
            faqItem.innerHTML = `
                <div class="faq-entry" style="margin-bottom: 15px;">
                    <label>Pytanie:</label>
                    <input type="text" class="form-control faq-question" placeholder="Pytanie" required maxlength="50">
                    <label>Odpowiedź:</label>
                    <textarea class="form-control faq-answer" placeholder="Odpowiedź" required style="margin-bottom: 10px;" maxlength="100"></textarea>
                    <button type="button" class="btn btn-danger remove-faq">Usuń</button>
                </div>
            `;
            faqList.appendChild(faqItem);

            // Add event listener for remove button
            faqItem.querySelector('.remove-faq').addEventListener('click', () => {
                faqItem.remove();
            });
        } else {
            alert('Możesz dodać maksymalnie 6 sekcji FAQ.');
        }
    });

    // Add remove functionality to existing FAQ items
    document.querySelectorAll('.remove-faq').forEach(button => {
        button.addEventListener('click', (event) => {
            event.target.closest('.faq-item').remove();
        });
    });
</script>



          <section class="ps-lg-2 ps-xxl-0 was-validated mb-3">
            <h2 class="h4">Krótki Opis <code>*</code></h2>
            <div class="form-text">Krótki opis Twojego bota. (Nie obsługuje znaczników Markdown)</div>
            <textarea class="form-control" style="height: 10rem" name="shortDesc" id="shortDesc" minlength="50" maxlength="140" required><%= botdata.shortDesc %></textarea>
          </section>

<!-- Sekcja dla długiego opisu -->
<section class="ps-lg-2 ps-xxl-0 mb-3 was-validated">
  <h2 class="h4">Długi Opis <code>*</code></h2>
  <div class="form-text">Długi opis Twojego bota. Obsługuje Markdown.</div>
  
  <div class="border rounded overflow-hidden">
    <!-- Toolbar dla podstawowego formatowania -->
    <div class="bg-light p-2 d-flex flex-wrap gap-2 border-bottom">
      <button type="button" class="btn btn-sm btn-outline-secondary" onclick="formatText('**', '**')">
        <i class="fas fa-bold"></i>
      </button>
      <button type="button" class="btn btn-sm btn-outline-secondary" onclick="formatText('_', '_')">
        <i class="fas fa-italic"></i>
      </button>
      <button type="button" class="btn btn-sm btn-outline-secondary" onclick="formatText('[', '](url)')">
        <i class="fas fa-link"></i>
      </button>
      <button type="button" class="btn btn-sm btn-outline-secondary" onclick="formatText('\n- ', '')">
        <i class="fas fa-list-ul"></i>
      </button>
      <button type="button" class="btn btn-sm btn-outline-secondary" onclick="formatText('\n1. ', '')">
        <i class="fas fa-list-ol"></i>
      </button>
      <button type="button" class="btn btn-sm btn-outline-secondary" onclick="formatText('> ', '')">
        <i class="fas fa-quote-right"></i>
      </button>
<button type="button" id="togglePreviewBtn" class="btn btn-sm btn-outline-primary ms-auto">
  <i class="fas fa-eye"></i><span class="ms-2">Podgląd</span>
</button>
    </div>
    
    <!-- Edytor -->
<textarea class="form-control border-0" 
          style="height: 30rem; min-height: 300px; resize: vertical;" 
          name="longDesc" 
          id="longDesc" 
          minlength="200" 
          maxlength="5000" 
          required 
          oninput="updateCounter()"
          onkeydown="return this.value.length < 5000 || event.keyCode === 8 || event.keyCode === 46"><%= botdata.longDesc ? botdata.longDesc.replace(/</g, '&lt;').replace(/>/g, '&gt;') : '' %></textarea>
    
    <!-- Licznik znaków -->
    <div class="bg-light p-2 border-top text-end">
      <span id="charCounter">0</span>/5000 znaków
    </div>
  </div>
  
  <!-- Podgląd Markdown -->
  <div id="markdownPreview" class="border p-3 mt-3 rounded bg-light" style="display: none;"></div>
</section>

<!-- Załaduj wymagane biblioteki -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/markdown-it@12.3.2/dist/markdown-it.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.3.6/purify.min.js"></script>
<style>
.pro-tag {
  display: inline-block;
  background: linear-gradient(90deg, #ffa500, #ff4500);
  color: #fff;
  font-size: 0.75rem;
  font-weight: bold;
  text-transform: uppercase;
  padding: 0.2rem 0.5rem;
  border-radius: 0.25rem;
  animation: shimmerPro 2s infinite;
  background-size: 400% 100%;
}

.gold-tag {
  display: inline-block;
  background: linear-gradient(90deg, #ffd700, #ffa500);
  color: #000;
  font-size: 0.75rem;
  font-weight: bold;
  text-transform: uppercase;
  padding: 0.2rem 0.5rem;
  border-radius: 0.25rem;
  animation: shimmerGold 2s infinite;
  background-size: 400% 100%;
}

.locked-tag {
  display: inline-block;
  background: #6c757d;
  color: #fff;
  font-size: 0.75rem;
  font-weight: bold;
  text-transform: uppercase;
  padding: 0.2rem 0.5rem;
  border-radius: 0.25rem;
  opacity: 0.7;
}

@keyframes shimmerPro {
  0% { background-position: -200%; }
  100% { background-position: 200%; }
}

@keyframes shimmerGold {
  0% { background-position: -200%; }
  100% { background-position: 200%; }
}
</style>
<style>
  #togglePreviewBtn.active {
    background-color: #0d6efd;
    color: white;
  }
  
  #markdownPreview img {
    max-width: 100%;
    height: auto;
  }
  
  #markdownPreview {
    max-height: 500px;
    overflow-y: auto;
  }
</style>

<script>
  // Elementy DOM
  const textarea = document.getElementById('longDesc');
  const preview = document.getElementById('markdownPreview');
  const charCounter = document.getElementById('charCounter');
  const toggleBtn = document.getElementById('togglePreviewBtn');
  let isPreviewVisible = false;

  // Inicjalizacja licznika
  updateCounter();

  // Przypisanie event listenerów
  toggleBtn.addEventListener('click', togglePreview);
  textarea.addEventListener('input', updateCounter);

  // Funkcje
  function formatText(prefix, suffix) {
    const start = textarea.selectionStart;
    const end = textarea.selectionEnd;
    const selectedText = textarea.value.substring(start, end);
    const beforeText = textarea.value.substring(0, start);
    const afterText = textarea.value.substring(end);
    
    textarea.value = beforeText + prefix + selectedText + suffix + afterText;
    textarea.selectionStart = start + prefix.length;
    textarea.selectionEnd = end + prefix.length;
    textarea.focus();
    updateCounter();
    
    if (isPreviewVisible) {
      updatePreview();
    }
  }

  function togglePreview() {
    isPreviewVisible = !isPreviewVisible;
    preview.style.display = isPreviewVisible ? 'block' : 'none';
    toggleBtn.classList.toggle('active', isPreviewVisible);
    
    if (isPreviewVisible) {
      updatePreview();
    }
  }

  function updatePreview() {
    try {
        if (!textarea.value.trim()) {
            preview.innerHTML = '<div class="text-muted">Podgląd pojawi się tutaj...</div>';
            return;
        }

        // Dodatkowe filtrowanie niebezpiecznych znaczników
        const markdownText = textarea.value
            .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')
            .replace(/javascript:/gi, '')
            .replace(/on\w+="[^"]*"/gi, '');
            
        const safeMarkdown = DOMPurify.sanitize(markdownText, {
            FORBID_TAGS: ['style', 'iframe', 'frame', 'embed', 'object'],
            FORBID_ATTR: ['style', 'onerror', 'onload']
        });
        
        const md = window.markdownit({
            html: true,
            linkify: true,
            typographer: true,
            breaks: true
        });
        
        preview.innerHTML = md.render(safeMarkdown);
        
        // Obsługa linków
        preview.querySelectorAll('a').forEach(link => {
            link.setAttribute('target', '_blank');
            link.setAttribute('rel', 'noopener noreferrer');
        });
        
    } catch (error) {
        console.error('Błąd podglądu:', error);
        preview.innerHTML = '<div class="alert alert-danger">Błąd generowania podglądu. Tekst może zawierać niebezpieczne elementy.</div>';
    }
}

function updateCounter() {
    const length = textarea.value.length;
    charCounter.textContent = length;
    
    // Blokuj wprowadzanie po osiągnięciu limitu
    if (length >= 5000) {
        charCounter.classList.add('text-danger');
        charCounter.textContent = 'Limit osiągnięty!';
        textarea.value = textarea.value.substring(0, 5000);
    } else {
        charCounter.classList.toggle('text-warning', length > 4500);
        charCounter.classList.toggle('text-danger', length > 4900);
    }
}

  // Inicjalizacja podglądu jeśli jest tekst
  if (textarea.value.trim()) {
    updatePreview();
  }
</script>

          <div id="results"></div>
          <div class="tab-pane fade show active" id="preview1" role="tabpanel">
            <button class="btn btn-primary" type="submit" id="saveChanges">Wyślij</button>
            <a href="/bot/<%= botdata.botID %>" class="btn btn-secondary my-1 me-1 d-none" type="button" id="secondButton"></a>
          </div>
        </form>
      </div>
      <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4793022343319587" crossorigin="anonymous"></script>
      <ins class="adsbygoogle" style="display:block" data-ad-format="fluid" data-ad-layout-key="-gw-22-2r-9d+199" data-ad-client="ca-pub-4793022343319587" data-ad-slot="7366836311"></ins>
      <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
      </script>
    </section>

  </main>



  <%- include('../partials/footer') %>
</body>

</html>

<script>
document.getElementById('addCoowner').addEventListener('click', event => {
    // Pobierz wszystkie obecne współwłaściciele
    const currentCoowners = document.querySelectorAll('[id^="removeCoowners"]');
    
    // Sprawdź limit (max 3)
    if (currentCoowners.length >= 3) {
        alert('Możesz dodać maksymalnie 3 współwłaścicieli!');
        return;
    }
    
    let input = event.target.parentElement.children[0].value.trim();
    
    // Sprawdź czy input to tylko cyfry (ID Discord)
    if (!/^\d+$/.test(input)) {
        alert('ID współwłaściciela może zawierać tylko cyfry!');
        return;
    }
    
    // Reszta kodu dodająca coownera...
    if (input == '') return;
    let div = document.createElement('div');
    div.className = 'input-group mb-4';
    div.innerHTML = `
    <span class="input-group-text">
      <i class="bx bx-user fs-lg"></i>
    </span>
    <input class="form-control" type="text" value="${input}" disabled>
    <button class="btn btn-danger" type="button" id="removeCoowners${input}">Usuń</button>
    `;
    event.target.parentElement.parentElement.appendChild(div);
    event.target.parentElement.children[0].value = '';
    
    // Dodaj obsługę przycisku Usuń
    div.querySelector('.btn-danger').addEventListener('click', function() {
        this.parentElement.remove();
    });
});
</script>

<script>
  document.onclick = function(e) {
    if (e.target.id == 'saveChanges') {
      e.preventDefault();
let coowner = [];
document.querySelectorAll('[id^="removeCoowners"]').forEach(item => {
    let id = item.id.replace('removeCoowners', '');
    if (/^\d+$/.test(id)) {
        coowner.push(id);
    }
});

coowner = [...new Set(coowner)];

      let tags = [];
      // get selected tags from 'selectedTags'
      document.querySelectorAll('[id^="tag"]').forEach(item => {
        if (item.checked) {
          tags.push(item.value);
        }
      });
      tags = [...new Set(tags)];

// Pobieranie FAQ
let faq = Array.from(document.querySelectorAll('.faq-item')).map(faqItem => {
    return {
        question: faqItem.querySelector('.faq-question').value.trim(),
        answer: faqItem.querySelector('.faq-answer').value.trim()
    };
});

        // Pobranie danych komend
        let commands = Array.from(document.querySelectorAll('.command-item')).map(commandItem => {
            return {
                name: commandItem.querySelector('.command-name').value.trim(),
                description: commandItem.querySelector('.command-description').value.trim()
            };
        });

// Przygotowanie danych
let data = {
    prefix: document.getElementById('prefix').value,
    inviteURL: document.getElementById('inviteURL').value,
    supportURL: document.getElementById('supportURL').value,
    websiteURL: document.getElementById('websiteURL').value,
    githubURL: document.getElementById('githubURL').value,
    donateURL: document.getElementById('donateURL').value,
    webhookURL: document.getElementById('webhookURL').value,
    shortDesc: document.getElementById('shortDesc').value,
    longDesc: document.getElementById('longDesc').value,
    coowners: coowner,
    tags: tags,
    faq: faq, 
	commands: commands,
	framework: document.getElementById('framework').value,
	customBannerURL: document.getElementById('customBannerURL')?.value || '',
    vanityURL: document.getElementById('vanityURL')?.value || ''
};

      fetch('/bots/edit/<%= botdata.botID %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }).then(res => res.json()).then(json => {
        if (json.error == false) {
          document.getElementById('results').innerHTML = `<div class="alert alert-success" role="alert">${json.message}</div>`;
          document.getElementById('secondButton').innerHTML = `Wróć do <%= botdata.username %>`;
          document.getElementById('secondButton').classList.remove('d-none');
        } else if (json.error == true) {
          document.getElementById('results').innerHTML = `<div class="alert alert-danger" role="alert">${json.message}</div>`;
          document.getElementById('secondButton').innerHTML = `Wróć do <%= botdata.username %>`;
          document.getElementById('secondButton').classList.remove('d-none');
        }
      });
    }
  }
</script>

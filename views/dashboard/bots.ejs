<!DOCTYPE html>
<html lang="pl" class="dark-mode">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Statystyki Botów | Discord Bot List</title>
  <%- include('../partials/head.ejs') %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@4.1.1/animate.min.css">
  <style>
    :root {
      --primary-gradient: linear-gradient(135deg, #7289da, #5b6eae);
      --card-hover-transform: translateY(-5px);
      --card-transition: all 0.3s ease;
      --success-gradient: linear-gradient(135deg, #43b581, #3aa374);
      --danger-gradient: linear-gradient(135deg, #f04747, #d83c3c);
      --warning-gradient: linear-gradient(135deg, #faa61a, #e8912d);
    }
    
    .stat-card {
      border-radius: 12px;
      border: none;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      transition: var(--card-transition);
      overflow: hidden;
      background: rgba(255,255,255,0.03);
    }
    
    .stat-card:hover {
      transform: var(--card-hover-transform);
      box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }
    
    .stat-icon {
      font-size: 2rem;
      margin-bottom: 1rem;
      background: var(--primary-gradient);
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    
    .stat-value {
      font-size: 2.2rem;
      font-weight: 700;
      background: var(--primary-gradient);
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    
    .bot-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      object-fit: cover;
      transition: all 0.3s ease;
      border: 2px solid rgba(114, 137, 218, 0.3);
    }
    
    .bot-avatar:hover {
      transform: scale(1.1);
      border-color: rgba(114, 137, 218, 0.7);
    }
    
    .bot-row {
      transition: all 0.3s ease;
    }
    
    .bot-row:hover {
      background: rgba(114, 137, 218, 0.05) !important;
    }
    
    .action-btn {
      transition: all 0.2s ease;
      border-radius: 6px;
      padding: 8px 12px;
      font-weight: 500;
    }
    
    .action-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .search-input {
      border-radius: 8px;
      padding: 12px 16px;
      background: rgba(255,255,255,0.05);
      border: 1px solid rgba(255,255,255,0.1);
      color: white;
      transition: all 0.3s ease;
    }
    
    .search-input:focus {
      background: rgba(255,255,255,0.08);
      border-color: rgba(114, 137, 218, 0.5);
      box-shadow: 0 0 0 3px rgba(114, 137, 218, 0.2);
    }
    
    .badge-status {
      padding: 6px 10px;
      border-radius: 20px;
      font-weight: 500;
      font-size: 0.8rem;
    }
    
    .modal-custom {
      background: rgba(0,0,0,0.7);
    }
    
    .modal-content-custom {
      border-radius: 12px;
      border: none;
      background: #2f3136;
      box-shadow: 0 10px 25px rgba(0,0,0,0.3);
    }
    
    .tab-content {
      animation: fadeIn 0.3s ease;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .nav-tabs .nav-link {
      border: none;
      color: #b9bbbe;
      font-weight: 500;
      padding: 12px 20px;
      border-radius: 8px 8px 0 0;
      transition: all 0.3s ease;
    }
    
    .nav-tabs .nav-link.active {
      color: #7289da;
      background: rgba(114, 137, 218, 0.1);
      border-bottom: 3px solid #7289da;
    }
    
    .nav-tabs .nav-link:hover:not(.active) {
      color: white;
      background: rgba(255,255,255,0.05);
    }
    
    .empty-state {
      padding: 40px 20px;
      text-align: center;
      background: rgba(255,255,255,0.02);
      border-radius: 12px;
      border: 1px dashed rgba(255,255,255,0.1);
    }
    
    .empty-state-icon {
      font-size: 3rem;
      color: rgba(255,255,255,0.2);
      margin-bottom: 1rem;
    }
  </style>
</head>

<body class="bg-dark text-light">
  <%- include('./partials/header.ejs') %>
  <%- include('./partials/aside.ejs') %>

  <!-- Main Content -->
  <main class="docs-container pt-5 pb-3 pb-lg-4" style="padding-right: 0;">
    <div class="container-fluid px-xxl-5 px-lg-4 pt-4 pt-lg-5 pb-4">
      <!-- Page Header -->
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="ps-lg-2 ps-xxl-0 mt-2 mt-lg-0 pt-4 pb-2 mb-3 mb-xl-4 animate__animated animate__fadeIn">
          <i class="fas fa-robot me-3"></i>Statystyki Botów
        </h1>
        <div class="text-muted">
          Ostatnia aktualizacja: <span class="text-white"><%= new Date().toLocaleString() %></span>
        </div>
      </div>

      <!-- Stats Cards Grid -->
      <div class="row g-4 mb-5 animate__animated animate__fadeInUp">
        <div class="col-md-6 col-lg-3">
          <div class="stat-card p-4 text-center h-100">
            <div class="stat-icon">
              <i class="fas fa-robot"></i>
            </div>
            <h3 class="h5 mb-3">Wszystkie Boty</h3>
            <div class="stat-value"><%= botsdata.length ? botsdata.length.toLocaleString() : "0" %></div>
            <div class="progress mt-3" style="height: 6px;">
              <div class="progress-bar bg-primary" role="progressbar" 
                   style="width: <%= Math.min(100, (botsdata.length || 0)/500*100) %>%;" 
                   aria-valuenow="<%= botsdata.length || 0 %>" aria-valuemin="0" aria-valuemax="500"></div>
            </div>
            <small class="text-muted">Cel: 500 botów</small>
          </div>
        </div>
        
        <div class="col-md-6 col-lg-3">
          <div class="stat-card p-4 text-center h-100">
            <div class="stat-icon">
              <i class="fas fa-user-shield"></i>
            </div>
            <h3 class="h5 mb-3">Właściciele</h3>
            <div class="stat-value"><%= botsdata.filter(b => b.ownerID).length ? botsdata.filter(b => b.ownerID).length.toLocaleString() : "0" %></div>
            <div class="mt-3">
              <span class="badge bg-primary me-2">
                <i class="fas fa-crown me-1"></i> <%= botsdata.filter(b => b.ownerID).length || 0 %>
              </span>
              <span class="badge bg-secondary">
                <i class="fas fa-users me-1"></i> <%= botsdata.reduce((c,b) => c + b.coowners.length, 0) %>
              </span>
            </div>
            <small class="text-muted">Właściciele / Współwłaściciele</small>
          </div>
        </div>
        
        <div class="col-md-6 col-lg-3">
          <div class="stat-card p-4 text-center h-100">
            <div class="stat-icon">
              <i class="fas fa-check-circle"></i>
            </div>
            <h3 class="h5 mb-3">Zatwierdzone</h3>
            <div class="stat-value"><%= botsdata.filter(b => b.status == "Approved").length ? botsdata.filter(b => b.status == "Approved").length.toLocaleString() : "0" %></div>
            <div class="progress mt-3" style="height: 6px;">
              <div class="progress-bar bg-success" role="progressbar" 
                   style="width: <%= botsdata.length ? (botsdata.filter(b => b.status == "Approved").length / botsdata.length * 100) : 0 %>%;" 
                   aria-valuenow="<%= botsdata.filter(b => b.status == "Approved").length || 0 %>" 
                   aria-valuemin="0" 
                   aria-valuemax="<%= botsdata.length || 1 %>"></div>
            </div>
            <small class="text-muted"><%= botsdata.length ? Math.round(botsdata.filter(b => b.status == "Approved").length / botsdata.length * 100) : 0 %>% wszystkich botów</small>
          </div>
        </div>
        
        <div class="col-md-6 col-lg-3">
          <div class="stat-card p-4 text-center h-100">
            <div class="stat-icon">
              <i class="fas fa-exclamation-triangle"></i>
            </div>
            <h3 class="h5 mb-3">Oczekujące</h3>
            <div class="stat-value"><%= botsdata.filter(b => b.status == "unverified").length ? botsdata.filter(b => b.status == "unverified").length.toLocaleString() : "0" %></div>
            <div class="progress mt-3" style="height: 6px;">
              <div class="progress-bar bg-warning" role="progressbar" 
                   style="width: <%= botsdata.length ? (botsdata.filter(b => b.status == "unverified").length / botsdata.length * 100) : 0 %>%;" 
                   aria-valuenow="<%= botsdata.filter(b => b.status == "unverified").length || 0 %>" 
                   aria-valuemin="0" 
                   aria-valuemax="<%= botsdata.length || 1 %>"></div>
            </div>
            <small class="text-muted"><%= botsdata.length ? Math.round(botsdata.filter(b => b.status == "unverified").length / botsdata.length * 100) : 0 %>% wszystkich botów</small>
          </div>
        </div>
      </div>

      <!-- Tabs Navigation -->
      <ul class="nav nav-tabs mb-4" id="botsTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="queue-tab" data-bs-toggle="tab" data-bs-target="#queue" type="button" role="tab">
            <i class="fas fa-clock me-2"></i>Kolejka (<%= botsdata.filter(b => b.status != 'Approved').length %>)
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="approved-tab" data-bs-toggle="tab" data-bs-target="#approved" type="button" role="tab">
            <i class="fas fa-check-circle me-2"></i>Zatwierdzone (<%= botsdata.filter(b => b.status == 'Approved').length %>)
          </button>
        </li>
      </ul>

      <!-- Tabs Content -->
      <div class="tab-content" id="botsTabsContent">
        <!-- Queue Tab -->
        <div class="tab-pane fade show active" id="queue" role="tabpanel">
          <% if (botsdata.filter(b => b.status != 'Approved').length < 1) { %>
            <div class="empty-state animate__animated animate__fadeIn">
              <div class="empty-state-icon">
                <i class="fas fa-robot"></i>
              </div>
              <h3 class="h5">Brak botów w kolejce!</h3>
              <p class="text-muted">W tej chwili w kolejce nie ma żadnych botów oczekujących na weryfikację.</p>
            </div>
          <% } else { %>
            <div class="table-responsive">
              <table class="table table-dark table-hover align-middle">
                <thead class="bg-dark-3">
                  <tr>
                    <th width="50px">#</th>
                    <th>Bot</th>
                    <th>Status</th>
                    <th class="text-end">Akcje</th>
                  </tr>
                </thead>
                <tbody>
                  <% let queueIndex = 1; %>
                  <% botsdata.filter(b => b.status != 'Approved').map(bot => { %>
                  <tr id="unverified_<%= bot.botID %>" class="bot-row">
                    <th scope="row"><%= queueIndex++ %></th>
                    <td class="d-flex align-items-center">
                      <img src="<%= bot.avatar %>" class="bot-avatar me-3" alt="<%- bot.username %>">
                      <div>
                        <div class="fw-bold"><%- bot.username %></div>
                        <small class="text-muted">ID: <%= bot.botID %></small>
                      </div>
                    </td>
                    <td>
                      <span class="badge-status bg-warning bg-opacity-10 text-warning">
                        <i class="fas fa-clock me-1"></i> Oczekujący
                      </span>
                    </td>
                    <td class="text-end">
                      <div class="d-flex justify-content-end gap-2">
                        <button class="btn btn-sm btn-success action-btn" data-bs-toggle="modal" data-bs-target="#approve_<%= bot.botID %>">
                          <i class="fas fa-check me-1"></i> Zatwierdź
                        </button>
                        <button class="btn btn-sm btn-danger action-btn" data-bs-toggle="modal" data-bs-target="#decline_<%= bot.botID %>">
                          <i class="fas fa-times me-1"></i> Odrzuć
                        </button>
                        <a href="/bot/<%= bot.botID %>" class="btn btn-sm btn-primary action-btn" target="_blank">
                          <i class="fas fa-eye me-1"></i> Podgląd
                        </a>
                      </div>

                      <!-- Approve Modal -->
                      <div class="modal fade modal-custom" id="approve_<%= bot.botID %>" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog">
                          <div class="modal-content modal-content-custom">
                            <div class="modal-header border-0">
                              <h5 class="modal-title">Zatwierdzenie bota</h5>
                              <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                              <div class="d-flex align-items-center mb-4">
                                <img src="<%= bot.avatar %>" class="bot-avatar me-3" alt="<%- bot.username %>">
                                <div>
                                  <h6 class="mb-0"><%- bot.username %></h6>
                                  <small class="text-muted">ID: <%= bot.botID %></small>
                                </div>
                              </div>
                              <p>Czy na pewno chcesz zatwierdzić tego bota? Sprawdź czy spełnia wszystkie wymagania przed zatwierdzeniem.</p>
                              <div id="approveError_<%= bot.botID %>" class="mb-3"></div>
                            </div>
                            <div class="modal-footer border-0">
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                              <button type="button" class="btn btn-success" onclick="approve(`<%= bot.botID %>`)">
                                <i class="fas fa-check me-1"></i> Zatwierdź
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>

                      <!-- Decline Modal -->
                      <div class="modal fade modal-custom" id="decline_<%= bot.botID %>" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog">
                          <div class="modal-content modal-content-custom">
                            <div class="modal-header border-0">
                              <h5 class="modal-title">Odrzucenie bota</h5>
                              <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                              <div class="d-flex align-items-center mb-4">
                                <img src="<%= bot.avatar %>" class="bot-avatar me-3" alt="<%- bot.username %>">
                                <div>
                                  <h6 class="mb-0"><%- bot.username %></h6>
                                  <small class="text-muted">ID: <%= bot.botID %></small>
                                </div>
                              </div>
                              <p>Podaj powód odrzucenia tego bota. Powód zostanie wysłany do właściciela.</p>
                              <textarea class="form-control bg-dark border-dark mb-3" id="declineReason_<%= bot.botID %>" placeholder="Powód odrzucenia..." rows="3"></textarea>
                              <div id="declineError_<%= bot.botID %>" class="mb-3"></div>
                            </div>
                            <div class="modal-footer border-0">
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                              <button type="button" class="btn btn-danger" onclick="decline(`<%= bot.botID %>`, document.getElementById('declineReason_<%= bot.botID %>').value)">
                                <i class="fas fa-times me-1"></i> Odrzuć
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          <% } %>
        </div>

        <!-- Approved Tab -->
        <div class="tab-pane fade" id="approved" role="tabpanel">
          <div class="mb-4">
            <div class="input-group">
              <span class="input-group-text bg-dark border-dark text-muted">
                <i class="fas fa-search"></i>
              </span>
              <input type="text" class="form-control search-input" id="searchUser" placeholder="Wyszukaj bota po nazwie lub ID...">
              <button class="btn btn-primary" type="button">
                <i class="fas fa-filter me-1"></i> Filtruj
              </button>
            </div>
          </div>
          
          <div class="table-responsive">
            <table class="table table-dark table-hover align-middle">
              <thead class="bg-dark-3">
                <tr>
                  <th width="50px">#</th>
                  <th>Bot</th>
                  <th>Status</th>
                  <th class="text-end">Akcje</th>
                </tr>
              </thead>
              <tbody>
                <% let approvedIndex = 1; %>
                <% botsdata.filter(b => b.status == 'Approved').map(bot => { %>
                <tr id="user<%= approvedIndex %>" class="bot-row">
                  <th scope="row"><%= approvedIndex++ %></th>
                  <td class="d-flex align-items-center">
                    <img src="<%= bot.avatar %>" class="bot-avatar me-3" alt="<%- bot.username %>">
                    <div>
                      <div class="fw-bold"><%- bot.username %></div>
                      <small class="text-muted">ID: <%= bot.botID %></small>
                    </div>
                  </td>
                  <td>
                    <span class="badge-status bg-success bg-opacity-10 text-success">
                      <i class="fas fa-check-circle me-1"></i> Zatwierdzony
                    </span>
                  </td>
                  <td class="text-end">
                    <a href="/bot/<%= bot.botID %>" class="btn btn-sm btn-primary action-btn" target="_blank">
                      <i class="fas fa-eye me-1"></i> Podgląd
                    </a>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script>
    // Approve bot function
    function approve(id) {
      event.preventDefault();
      if (!id) {
        document.getElementById('approveError_' + id).innerHTML = `
          <div class="alert alert-danger d-flex align-items-center" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            <div>Proszę podać ID bota.</div>
          </div>`;
        return;
      }

      fetch('/dashboard/bot/approve', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          botID: id
        })
      }).then(res => res.json()).then(data => {
        if (data.error) {
          document.getElementById('approveError_' + id).innerHTML = `
            <div class="alert alert-danger d-flex align-items-center" role="alert">
              <i class="fas fa-exclamation-circle me-2"></i>
              <div>${data.message}</div>
            </div>`;
        } else if (data.success) {
          document.getElementById('approveError_' + id).innerHTML = `
            <div class="alert alert-success d-flex align-items-center" role="alert">
              <i class="fas fa-check-circle me-2"></i>
              <div>${data.message}</div>
            </div>`;
          
          // Animate row removal
          const row = document.getElementById('unverified_' + id);
          row.classList.add('animate__animated', 'animate__fadeOut');
          setTimeout(() => row.remove(), 300);
          
          // Update counters
          const queueTab = document.getElementById('queue-tab');
          const approvedTab = document.getElementById('approved-tab');
          
          const queueCount = parseInt(queueTab.textContent.match(/\((\d+)\)/)[1]) - 1;
          const approvedCount = parseInt(approvedTab.textContent.match(/\((\d+)\)/)[1]) + 1;
          
          queueTab.innerHTML = `<i class="fas fa-clock me-2"></i>Kolejka (${queueCount})`;
          approvedTab.innerHTML = `<i class="fas fa-check-circle me-2"></i>Zatwierdzone (${approvedCount})`;
          
          // Show success toast
          showToast('success', 'Bot zatwierdzony', `Bot został pomyślnie zatwierdzony.`);
        }
      });
    }

    // Decline bot function
    function decline(id, reason) {
      event.preventDefault();
      if (!id) {
        document.getElementById('declineError_' + id).innerHTML = `
          <div class="alert alert-danger d-flex align-items-center" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            <div>Proszę podać ID bota.</div>
          </div>`;
        return;
      }
      if (!reason) {
        document.getElementById('declineError_' + id).innerHTML = `
          <div class="alert alert-danger d-flex align-items-center" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            <div>Proszę podać powód odrzucenia bota.</div>
          </div>`;
        return;
      }
      
      fetch('/dashboard/bot/decline', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          botID: id,
          reason: reason
        })
      }).then(res => res.json()).then(data => {
        if (data.error) {
          document.getElementById('declineError_' + id).innerHTML = `
            <div class="alert alert-danger d-flex align-items-center" role="alert">
              <i class="fas fa-exclamation-circle me-2"></i>
              <div>${data.error}</div>
            </div>`;
        } else if (data.success) {
          document.getElementById('declineError_' + id).innerHTML = `
            <div class="alert alert-success d-flex align-items-center" role="alert">
              <i class="fas fa-check-circle me-2"></i>
              <div>${data.message}</div>
            </div>`;
          
          // Animate row removal
          const row = document.getElementById('unverified_' + id);
          row.classList.add('animate__animated', 'animate__fadeOut');
          setTimeout(() => row.remove(), 300);
          
          // Update queue counter
          const queueTab = document.getElementById('queue-tab');
          const queueCount = parseInt(queueTab.textContent.match(/\((\d+)\)/)[1]) - 1;
          queueTab.innerHTML = `<i class="fas fa-clock me-2"></i>Kolejka (${queueCount})`;
          
          // Show success toast
          showToast('success', 'Bot odrzucony', `Bot został pomyślnie odrzucony.`);
          
          // Close modal after delay
          setTimeout(() => {
            const modal = bootstrap.Modal.getInstance(document.getElementById('decline_' + id));
            modal.hide();
          }, 1500);
        }
      });
    }

    // Search functionality
    document.getElementById("searchUser").addEventListener("input", function() {
      const search = this.value.toLowerCase();
      const rows = document.querySelectorAll("#approved tbody tr");
      
      rows.forEach(row => {
        const username = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
        const botId = row.querySelector('td:nth-child(2) small').textContent.toLowerCase();
        
        if (username.includes(search) || botId.includes(search)) {
          row.style.display = "table-row";
          row.classList.add('animate__animated', 'animate__fadeIn');
        } else {
          row.style.display = "none";
        }
      });
    });

    // Show toast notification
    function showToast(type, title, message) {
      // In a real implementation, you would use a toast library or custom implementation
      console.log(`[${type.toUpperCase()}] ${title}: ${message}`);
      // Example: bootstrap.Toast or similar
    }

    // Initialize tooltips
    document.addEventListener('DOMContentLoaded', function() {
      const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
      });
    });
  </script>
</body>
</html>